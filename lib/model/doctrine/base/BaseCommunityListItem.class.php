<?php

/**
 * BaseCommunityListItem
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $title
 * @property clob $body
 * @property integer $list_id
 * @property integer $score
 * @property integer $count
 * @property integer $submitted_by
 * @property CommunityList $List
 * @property sfGuardUser $User
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6365 2009-09-15 18:22:38Z jwage $
 */
abstract class BaseCommunityListItem extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('community_list_item');
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '255',
             ));
        $this->hasColumn('body', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('list_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('score', 'integer', null, array(
             'type' => 'integer',
             'default' => 0,
             ));
        $this->hasColumn('count', 'integer', null, array(
             'type' => 'integer',
             'default' => 0,
             ));
        $this->hasColumn('submitted_by', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
    }

    public function setUp()
    {
        parent::setUp();
    $this->hasOne('CommunityList as List', array(
             'local' => 'list_id',
             'foreign' => 'id'));

        $this->hasOne('sfGuardUser as User', array(
             'local' => 'submitted_by',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $markdown0 = new Doctrine_Template_Markdown(array(
             'fields' => 
             array(
              0 => 'body',
             ),
             ));
        $this->actAs($timestampable0);
        $this->actAs($markdown0);
    }
}