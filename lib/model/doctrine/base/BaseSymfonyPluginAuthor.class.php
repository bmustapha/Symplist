<?php

/**
 * BaseSymfonyPluginAuthor
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $plugin_id
 * @property integer $author_id
 * @property SymfonyPlugin $Plugin
 * @property sfGuardUser $Author
 * 
 * @method integer             getPluginId()  Returns the current record's "plugin_id" value
 * @method integer             getAuthorId()  Returns the current record's "author_id" value
 * @method SymfonyPlugin       getPlugin()    Returns the current record's "Plugin" value
 * @method sfGuardUser         getAuthor()    Returns the current record's "Author" value
 * @method SymfonyPluginAuthor setPluginId()  Sets the current record's "plugin_id" value
 * @method SymfonyPluginAuthor setAuthorId()  Sets the current record's "author_id" value
 * @method SymfonyPluginAuthor setPlugin()    Sets the current record's "Plugin" value
 * @method SymfonyPluginAuthor setAuthor()    Sets the current record's "Author" value
 * 
 * @package    plugintracker
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseSymfonyPluginAuthor extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('symfony_plugin_author');
        $this->hasColumn('plugin_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('author_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('SymfonyPlugin as Plugin', array(
             'local' => 'plugin_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('sfGuardUser as Author', array(
             'local' => 'author_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}