<?php
/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class Version3 extends Doctrine_Migration_Base
{
    public function up()
    {
        $this->dropForeignKey('plugin_release', 'plugin_release_plugin_id_symfony_plugin_id');
        $this->createForeignKey('plugin_release', 'plugin_release_plugin_id_symfony_plugin_id_1', array(
             'name' => 'plugin_release_plugin_id_symfony_plugin_id_1',
             'local' => 'plugin_id',
             'foreign' => 'id',
             'foreignTable' => 'symfony_plugin',
             'onUpdate' => '',
             'onDelete' => 'CASCADE',
             ));
        $this->createForeignKey('plugin_release_dependency', 'plugin_release_dependency_release_id_plugin_release_id', array(
             'name' => 'plugin_release_dependency_release_id_plugin_release_id',
             'local' => 'release_id',
             'foreign' => 'id',
             'foreignTable' => 'plugin_release',
             'onUpdate' => '',
             'onDelete' => 'CASCADE',
             ));
        $this->createForeignKey('plugin_release_dependency', 'plugin_release_dependency_dependency_id_symfony_plugin_id', array(
             'name' => 'plugin_release_dependency_dependency_id_symfony_plugin_id',
             'local' => 'dependency_id',
             'foreign' => 'id',
             'foreignTable' => 'symfony_plugin',
             'onUpdate' => '',
             'onDelete' => 'CASCADE',
             ));
        $this->createForeignKey('plugin_tag', 'plugin_tag_tag_id_tag_id', array(
             'name' => 'plugin_tag_tag_id_tag_id',
             'local' => 'tag_id',
             'foreign' => 'id',
             'foreignTable' => 'tag',
             'onUpdate' => '',
             'onDelete' => 'CASCADE',
             ));
        $this->createForeignKey('plugin_tag', 'plugin_tag_plugin_id_symfony_plugin_id', array(
             'name' => 'plugin_tag_plugin_id_symfony_plugin_id',
             'local' => 'plugin_id',
             'foreign' => 'id',
             'foreignTable' => 'symfony_plugin',
             'onUpdate' => '',
             'onDelete' => 'CASCADE',
             ));
        $this->addIndex('plugin_release', 'plugin_release_plugin_id', array(
             'fields' => 
             array(
              0 => 'plugin_id',
             ),
             ));
        $this->addIndex('plugin_release', 'sortable', array(
             'fields' => 
             array(
              0 => 'position',
              1 => 'plugin_id',
             ),
             'type' => 'unique',
             ));
        $this->addIndex('plugin_release_dependency', 'plugin_release_dependency_release_id', array(
             'fields' => 
             array(
              0 => 'release_id',
             ),
             ));
        $this->addIndex('plugin_release_dependency', 'plugin_release_dependency_dependency_id', array(
             'fields' => 
             array(
              0 => 'dependency_id',
             ),
             ));
        $this->addIndex('plugin_tag', 'plugin_tag_tag_id', array(
             'fields' => 
             array(
              0 => 'tag_id',
             ),
             ));
        $this->addIndex('plugin_tag', 'plugin_tag_plugin_id', array(
             'fields' => 
             array(
              0 => 'plugin_id',
             ),
             ));
    }

    public function down()
    {
        $this->createForeignKey('plugin_release', 'plugin_release_plugin_id_symfony_plugin_id', array(
             'name' => 'plugin_release_plugin_id_symfony_plugin_id',
             'local' => 'plugin_id',
             'foreign' => 'id',
             'foreignTable' => 'symfony_plugin',
             ));
        $this->dropForeignKey('plugin_release', 'plugin_release_plugin_id_symfony_plugin_id_1');
        $this->dropForeignKey('plugin_release_dependency', 'plugin_release_dependency_release_id_plugin_release_id');
        $this->dropForeignKey('plugin_release_dependency', 'plugin_release_dependency_dependency_id_symfony_plugin_id');
        $this->dropForeignKey('plugin_tag', 'plugin_tag_tag_id_tag_id');
        $this->dropForeignKey('plugin_tag', 'plugin_tag_plugin_id_symfony_plugin_id');
        $this->removeIndex('plugin_release', 'plugin_release_plugin_id', array(
             'fields' => 
             array(
              0 => 'plugin_id',
             ),
             ));
        $this->removeIndex('plugin_release', 'sortable', array(
             'fields' => 
             array(
              0 => 'position',
              1 => 'plugin_id',
             ),
             'type' => 'unique',
             ));
        $this->removeIndex('plugin_release_dependency', 'plugin_release_dependency_release_id', array(
             'fields' => 
             array(
              0 => 'release_id',
             ),
             ));
        $this->removeIndex('plugin_release_dependency', 'plugin_release_dependency_dependency_id', array(
             'fields' => 
             array(
              0 => 'dependency_id',
             ),
             ));
        $this->removeIndex('plugin_tag', 'plugin_tag_tag_id', array(
             'fields' => 
             array(
              0 => 'tag_id',
             ),
             ));
        $this->removeIndex('plugin_tag', 'plugin_tag_plugin_id', array(
             'fields' => 
             array(
              0 => 'plugin_id',
             ),
             ));
    }
}