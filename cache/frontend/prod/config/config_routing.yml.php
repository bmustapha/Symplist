<?php
// auto-generated by sfRoutingConfigHandler
// date: 2009/11/13 16:16:33
$map = array();
$map['meta_data_edit'] = new sfRoute('/seo/meta_data/edit', array (
  'module' => 'csSEO',
  'action' => 'editMetaData',
), array (
), array (
  'suffix' => '',
  'variable_prefixes' => 
  array (
    0 => ':',
  ),
  'segment_separators' => 
  array (
    0 => '/',
    1 => '.',
  ),
  'variable_regex' => '[\\w\\d_]+',
  'text_regex' => '.+?',
  'generate_shortest_url' => true,
  'extra_parameters_as_query_string' => true,
  'load_configuration' => true,
  'default_module' => 'default',
  'default_action' => 'index',
  'debug' => '',
  'logging' => '',
  'variable_prefix_regex' => '(?:\\:)',
  'segment_separators_regex' => '(?:/|\\.)',
  'variable_content_regex' => '[^/\\.]+',
));
$map['meta_data_edit']->setCompiledData(array (
  'tokens' => 
  array (
    0 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    1 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'seo',
      3 => NULL,
    ),
    2 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    3 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'meta_data',
      3 => NULL,
    ),
    4 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    5 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'edit',
      3 => NULL,
    ),
  ),
  'default_parameters' => 
  array (
  ),
  'default_options' => 
  array (
    'load_configuration' => true,
    'suffix' => '',
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
  ),
  'options' => 
  array (
    'suffix' => '',
    'variable_prefixes' => 
    array (
      0 => ':',
    ),
    'segment_separators' => 
    array (
      0 => '/',
      1 => '.',
    ),
    'variable_regex' => '[\\w\\d_]+',
    'text_regex' => '.+?',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
    'load_configuration' => true,
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'variable_prefix_regex' => '(?:\\:)',
    'segment_separators_regex' => '(?:/|\\.)',
    'variable_content_regex' => '[^/\\.]+',
  ),
  'pattern' => '/seo/meta_data/edit',
  'regex' => '#^
/seo
/meta_data
/edit
$#x',
  'variables' => 
  array (
  ),
  'defaults' => 
  array (
    'module' => 'csSEO',
    'action' => 'editMetaData',
  ),
  'requirements' => 
  array (
  ),
  'suffix' => '',
));
$map['sitemap_xml_edit'] = new sfRoute('/seo/sitemap_data/edit', array (
  'module' => 'csSEO',
  'action' => 'editSitemapData',
), array (
), array (
  'suffix' => '',
  'variable_prefixes' => 
  array (
    0 => ':',
  ),
  'segment_separators' => 
  array (
    0 => '/',
    1 => '.',
  ),
  'variable_regex' => '[\\w\\d_]+',
  'text_regex' => '.+?',
  'generate_shortest_url' => true,
  'extra_parameters_as_query_string' => true,
  'load_configuration' => true,
  'default_module' => 'default',
  'default_action' => 'index',
  'debug' => '',
  'logging' => '',
  'variable_prefix_regex' => '(?:\\:)',
  'segment_separators_regex' => '(?:/|\\.)',
  'variable_content_regex' => '[^/\\.]+',
));
$map['sitemap_xml_edit']->setCompiledData(array (
  'tokens' => 
  array (
    0 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    1 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'seo',
      3 => NULL,
    ),
    2 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    3 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'sitemap_data',
      3 => NULL,
    ),
    4 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    5 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'edit',
      3 => NULL,
    ),
  ),
  'default_parameters' => 
  array (
  ),
  'default_options' => 
  array (
    'load_configuration' => true,
    'suffix' => '',
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
  ),
  'options' => 
  array (
    'suffix' => '',
    'variable_prefixes' => 
    array (
      0 => ':',
    ),
    'segment_separators' => 
    array (
      0 => '/',
      1 => '.',
    ),
    'variable_regex' => '[\\w\\d_]+',
    'text_regex' => '.+?',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
    'load_configuration' => true,
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'variable_prefix_regex' => '(?:\\:)',
    'segment_separators_regex' => '(?:/|\\.)',
    'variable_content_regex' => '[^/\\.]+',
  ),
  'pattern' => '/seo/sitemap_data/edit',
  'regex' => '#^
/seo
/sitemap_data
/edit
$#x',
  'variables' => 
  array (
  ),
  'defaults' => 
  array (
    'module' => 'csSEO',
    'action' => 'editSitemapData',
  ),
  'requirements' => 
  array (
  ),
  'suffix' => '',
));
$map['sitemap_xml'] = new sfRoute('/sitemap.xml', array (
  'module' => 'csSEO',
  'action' => 'sitemap',
  'location_slug' => 'main',
  'format' => 'xml',
), array (
), array (
  'suffix' => '',
  'variable_prefixes' => 
  array (
    0 => ':',
  ),
  'segment_separators' => 
  array (
    0 => '/',
    1 => '.',
  ),
  'variable_regex' => '[\\w\\d_]+',
  'text_regex' => '.+?',
  'generate_shortest_url' => true,
  'extra_parameters_as_query_string' => true,
  'load_configuration' => true,
  'default_module' => 'default',
  'default_action' => 'index',
  'debug' => '',
  'logging' => '',
  'variable_prefix_regex' => '(?:\\:)',
  'segment_separators_regex' => '(?:/|\\.)',
  'variable_content_regex' => '[^/\\.]+',
));
$map['sitemap_xml']->setCompiledData(array (
  'tokens' => 
  array (
    0 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    1 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'sitemap',
      3 => NULL,
    ),
    2 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '.',
      3 => NULL,
    ),
    3 => 
    array (
      0 => 'text',
      1 => '.',
      2 => 'xml',
      3 => NULL,
    ),
  ),
  'default_parameters' => 
  array (
  ),
  'default_options' => 
  array (
    'load_configuration' => true,
    'suffix' => '',
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
  ),
  'options' => 
  array (
    'suffix' => '',
    'variable_prefixes' => 
    array (
      0 => ':',
    ),
    'segment_separators' => 
    array (
      0 => '/',
      1 => '.',
    ),
    'variable_regex' => '[\\w\\d_]+',
    'text_regex' => '.+?',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
    'load_configuration' => true,
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'variable_prefix_regex' => '(?:\\:)',
    'segment_separators_regex' => '(?:/|\\.)',
    'variable_content_regex' => '[^/\\.]+',
  ),
  'pattern' => '/sitemap.xml',
  'regex' => '#^
/sitemap
\\.xml
$#x',
  'variables' => 
  array (
  ),
  'defaults' => 
  array (
    'module' => 'csSEO',
    'action' => 'sitemap',
    'location_slug' => 'main',
    'format' => 'xml',
  ),
  'requirements' => 
  array (
  ),
  'suffix' => '',
));
$map['jsthumbnail'] = new sfRoute('/jsThumbnail', array (
  'module' => 'jsThumbnail',
  'action' => 'thumbnail',
), array (
), array (
  'suffix' => '',
  'variable_prefixes' => 
  array (
    0 => ':',
  ),
  'segment_separators' => 
  array (
    0 => '/',
    1 => '.',
  ),
  'variable_regex' => '[\\w\\d_]+',
  'text_regex' => '.+?',
  'generate_shortest_url' => true,
  'extra_parameters_as_query_string' => true,
  'load_configuration' => true,
  'default_module' => 'default',
  'default_action' => 'index',
  'debug' => '',
  'logging' => '',
  'variable_prefix_regex' => '(?:\\:)',
  'segment_separators_regex' => '(?:/|\\.)',
  'variable_content_regex' => '[^/\\.]+',
));
$map['jsthumbnail']->setCompiledData(array (
  'tokens' => 
  array (
    0 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    1 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'jsThumbnail',
      3 => NULL,
    ),
  ),
  'default_parameters' => 
  array (
  ),
  'default_options' => 
  array (
    'load_configuration' => true,
    'suffix' => '',
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
  ),
  'options' => 
  array (
    'suffix' => '',
    'variable_prefixes' => 
    array (
      0 => ':',
    ),
    'segment_separators' => 
    array (
      0 => '/',
      1 => '.',
    ),
    'variable_regex' => '[\\w\\d_]+',
    'text_regex' => '.+?',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
    'load_configuration' => true,
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'variable_prefix_regex' => '(?:\\:)',
    'segment_separators_regex' => '(?:/|\\.)',
    'variable_content_regex' => '[^/\\.]+',
  ),
  'pattern' => '/jsThumbnail',
  'regex' => '#^
/jsThumbnail
$#x',
  'variables' => 
  array (
  ),
  'defaults' => 
  array (
    'module' => 'jsThumbnail',
    'action' => 'thumbnail',
  ),
  'requirements' => 
  array (
  ),
  'suffix' => '',
));
$map['jsthumbnail_remote'] = new sfRoute('/jsThumbnail/remote', array (
  'module' => 'jsThumbnail',
  'action' => 'remote',
), array (
), array (
  'suffix' => '',
  'variable_prefixes' => 
  array (
    0 => ':',
  ),
  'segment_separators' => 
  array (
    0 => '/',
    1 => '.',
  ),
  'variable_regex' => '[\\w\\d_]+',
  'text_regex' => '.+?',
  'generate_shortest_url' => true,
  'extra_parameters_as_query_string' => true,
  'load_configuration' => true,
  'default_module' => 'default',
  'default_action' => 'index',
  'debug' => '',
  'logging' => '',
  'variable_prefix_regex' => '(?:\\:)',
  'segment_separators_regex' => '(?:/|\\.)',
  'variable_content_regex' => '[^/\\.]+',
));
$map['jsthumbnail_remote']->setCompiledData(array (
  'tokens' => 
  array (
    0 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    1 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'jsThumbnail',
      3 => NULL,
    ),
    2 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    3 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'remote',
      3 => NULL,
    ),
  ),
  'default_parameters' => 
  array (
  ),
  'default_options' => 
  array (
    'load_configuration' => true,
    'suffix' => '',
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
  ),
  'options' => 
  array (
    'suffix' => '',
    'variable_prefixes' => 
    array (
      0 => ':',
    ),
    'segment_separators' => 
    array (
      0 => '/',
      1 => '.',
    ),
    'variable_regex' => '[\\w\\d_]+',
    'text_regex' => '.+?',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
    'load_configuration' => true,
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'variable_prefix_regex' => '(?:\\:)',
    'segment_separators_regex' => '(?:/|\\.)',
    'variable_content_regex' => '[^/\\.]+',
  ),
  'pattern' => '/jsThumbnail/remote',
  'regex' => '#^
/jsThumbnail
/remote
$#x',
  'variables' => 
  array (
  ),
  'defaults' => 
  array (
    'module' => 'jsThumbnail',
    'action' => 'remote',
  ),
  'requirements' => 
  array (
  ),
  'suffix' => '',
));
$map['cscomments_comments_add'] = new sfRoute('/csComments/comments/add', array (
  'module' => 'csComments',
  'action' => 'add',
), array (
), array (
  'suffix' => '',
  'variable_prefixes' => 
  array (
    0 => ':',
  ),
  'segment_separators' => 
  array (
    0 => '/',
    1 => '.',
  ),
  'variable_regex' => '[\\w\\d_]+',
  'text_regex' => '.+?',
  'generate_shortest_url' => true,
  'extra_parameters_as_query_string' => true,
  'load_configuration' => true,
  'default_module' => 'default',
  'default_action' => 'index',
  'debug' => '',
  'logging' => '',
  'variable_prefix_regex' => '(?:\\:)',
  'segment_separators_regex' => '(?:/|\\.)',
  'variable_content_regex' => '[^/\\.]+',
));
$map['cscomments_comments_add']->setCompiledData(array (
  'tokens' => 
  array (
    0 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    1 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'csComments',
      3 => NULL,
    ),
    2 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    3 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'comments',
      3 => NULL,
    ),
    4 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    5 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'add',
      3 => NULL,
    ),
  ),
  'default_parameters' => 
  array (
  ),
  'default_options' => 
  array (
    'load_configuration' => true,
    'suffix' => '',
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
  ),
  'options' => 
  array (
    'suffix' => '',
    'variable_prefixes' => 
    array (
      0 => ':',
    ),
    'segment_separators' => 
    array (
      0 => '/',
      1 => '.',
    ),
    'variable_regex' => '[\\w\\d_]+',
    'text_regex' => '.+?',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
    'load_configuration' => true,
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'variable_prefix_regex' => '(?:\\:)',
    'segment_separators_regex' => '(?:/|\\.)',
    'variable_content_regex' => '[^/\\.]+',
  ),
  'pattern' => '/csComments/comments/add',
  'regex' => '#^
/csComments
/comments
/add
$#x',
  'variables' => 
  array (
  ),
  'defaults' => 
  array (
    'module' => 'csComments',
    'action' => 'add',
  ),
  'requirements' => 
  array (
  ),
  'suffix' => '',
));
$map['cscomments_comments_do_add'] = new sfRoute('/csComments/comments/addComment', array (
  'module' => 'csComments',
  'action' => 'doAdd',
), array (
), array (
  'suffix' => '',
  'variable_prefixes' => 
  array (
    0 => ':',
  ),
  'segment_separators' => 
  array (
    0 => '/',
    1 => '.',
  ),
  'variable_regex' => '[\\w\\d_]+',
  'text_regex' => '.+?',
  'generate_shortest_url' => true,
  'extra_parameters_as_query_string' => true,
  'load_configuration' => true,
  'default_module' => 'default',
  'default_action' => 'index',
  'debug' => '',
  'logging' => '',
  'variable_prefix_regex' => '(?:\\:)',
  'segment_separators_regex' => '(?:/|\\.)',
  'variable_content_regex' => '[^/\\.]+',
));
$map['cscomments_comments_do_add']->setCompiledData(array (
  'tokens' => 
  array (
    0 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    1 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'csComments',
      3 => NULL,
    ),
    2 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    3 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'comments',
      3 => NULL,
    ),
    4 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    5 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'addComment',
      3 => NULL,
    ),
  ),
  'default_parameters' => 
  array (
  ),
  'default_options' => 
  array (
    'load_configuration' => true,
    'suffix' => '',
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
  ),
  'options' => 
  array (
    'suffix' => '',
    'variable_prefixes' => 
    array (
      0 => ':',
    ),
    'segment_separators' => 
    array (
      0 => '/',
      1 => '.',
    ),
    'variable_regex' => '[\\w\\d_]+',
    'text_regex' => '.+?',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
    'load_configuration' => true,
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'variable_prefix_regex' => '(?:\\:)',
    'segment_separators_regex' => '(?:/|\\.)',
    'variable_content_regex' => '[^/\\.]+',
  ),
  'pattern' => '/csComments/comments/addComment',
  'regex' => '#^
/csComments
/comments
/addComment
$#x',
  'variables' => 
  array (
  ),
  'defaults' => 
  array (
    'module' => 'csComments',
    'action' => 'doAdd',
  ),
  'requirements' => 
  array (
  ),
  'suffix' => '',
));
$map['cscomments_comments_edit'] = new sfRoute('/csComments/comments/editComment', array (
  'module' => 'csComments',
  'action' => 'doEdit',
), array (
), array (
  'suffix' => '',
  'variable_prefixes' => 
  array (
    0 => ':',
  ),
  'segment_separators' => 
  array (
    0 => '/',
    1 => '.',
  ),
  'variable_regex' => '[\\w\\d_]+',
  'text_regex' => '.+?',
  'generate_shortest_url' => true,
  'extra_parameters_as_query_string' => true,
  'load_configuration' => true,
  'default_module' => 'default',
  'default_action' => 'index',
  'debug' => '',
  'logging' => '',
  'variable_prefix_regex' => '(?:\\:)',
  'segment_separators_regex' => '(?:/|\\.)',
  'variable_content_regex' => '[^/\\.]+',
));
$map['cscomments_comments_edit']->setCompiledData(array (
  'tokens' => 
  array (
    0 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    1 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'csComments',
      3 => NULL,
    ),
    2 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    3 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'comments',
      3 => NULL,
    ),
    4 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    5 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'editComment',
      3 => NULL,
    ),
  ),
  'default_parameters' => 
  array (
  ),
  'default_options' => 
  array (
    'load_configuration' => true,
    'suffix' => '',
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
  ),
  'options' => 
  array (
    'suffix' => '',
    'variable_prefixes' => 
    array (
      0 => ':',
    ),
    'segment_separators' => 
    array (
      0 => '/',
      1 => '.',
    ),
    'variable_regex' => '[\\w\\d_]+',
    'text_regex' => '.+?',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
    'load_configuration' => true,
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'variable_prefix_regex' => '(?:\\:)',
    'segment_separators_regex' => '(?:/|\\.)',
    'variable_content_regex' => '[^/\\.]+',
  ),
  'pattern' => '/csComments/comments/editComment',
  'regex' => '#^
/csComments
/comments
/editComment
$#x',
  'variables' => 
  array (
  ),
  'defaults' => 
  array (
    'module' => 'csComments',
    'action' => 'doEdit',
  ),
  'requirements' => 
  array (
  ),
  'suffix' => '',
));
$map['cscomments_comments_delete'] = new sfRoute('/csComments/comments/deleteComment', array (
  'module' => 'csComments',
  'action' => 'doDelete',
), array (
), array (
  'suffix' => '',
  'variable_prefixes' => 
  array (
    0 => ':',
  ),
  'segment_separators' => 
  array (
    0 => '/',
    1 => '.',
  ),
  'variable_regex' => '[\\w\\d_]+',
  'text_regex' => '.+?',
  'generate_shortest_url' => true,
  'extra_parameters_as_query_string' => true,
  'load_configuration' => true,
  'default_module' => 'default',
  'default_action' => 'index',
  'debug' => '',
  'logging' => '',
  'variable_prefix_regex' => '(?:\\:)',
  'segment_separators_regex' => '(?:/|\\.)',
  'variable_content_regex' => '[^/\\.]+',
));
$map['cscomments_comments_delete']->setCompiledData(array (
  'tokens' => 
  array (
    0 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    1 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'csComments',
      3 => NULL,
    ),
    2 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    3 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'comments',
      3 => NULL,
    ),
    4 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    5 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'deleteComment',
      3 => NULL,
    ),
  ),
  'default_parameters' => 
  array (
  ),
  'default_options' => 
  array (
    'load_configuration' => true,
    'suffix' => '',
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
  ),
  'options' => 
  array (
    'suffix' => '',
    'variable_prefixes' => 
    array (
      0 => ':',
    ),
    'segment_separators' => 
    array (
      0 => '/',
      1 => '.',
    ),
    'variable_regex' => '[\\w\\d_]+',
    'text_regex' => '.+?',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
    'load_configuration' => true,
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'variable_prefix_regex' => '(?:\\:)',
    'segment_separators_regex' => '(?:/|\\.)',
    'variable_content_regex' => '[^/\\.]+',
  ),
  'pattern' => '/csComments/comments/deleteComment',
  'regex' => '#^
/csComments
/comments
/deleteComment
$#x',
  'variables' => 
  array (
  ),
  'defaults' => 
  array (
    'module' => 'csComments',
    'action' => 'doDelete',
  ),
  'requirements' => 
  array (
  ),
  'suffix' => '',
));
$map['comment_csCommentAdmin'] = new sfDoctrineRoute('/csCommentAdmin.:sf_format', array (
  'module' => 'csCommentAdmin',
  'action' => 'index',
  'sf_format' => 'html',
), array (
  'id' => '\\d+',
  'sf_method' => 
  array (
    0 => 'get',
  ),
  'sf_format' => '[^/\\.]+',
), array (
  'suffix' => '',
  'variable_prefixes' => 
  array (
    0 => ':',
  ),
  'segment_separators' => 
  array (
    0 => '/',
    1 => '.',
  ),
  'variable_regex' => '[\\w\\d_]+',
  'text_regex' => '.+?',
  'generate_shortest_url' => true,
  'extra_parameters_as_query_string' => true,
  'load_configuration' => true,
  'default_module' => 'default',
  'default_action' => 'index',
  'debug' => '',
  'logging' => '',
  'model' => 'Comment',
  'type' => 'list',
  'method' => NULL,
  'variable_prefix_regex' => '(?:\\:)',
  'segment_separators_regex' => '(?:/|\\.)',
  'variable_content_regex' => '[^/\\.]+',
));
$map['comment_csCommentAdmin']->setCompiledData(array (
  'tokens' => 
  array (
    0 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    1 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'csCommentAdmin',
      3 => NULL,
    ),
    2 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '.',
      3 => NULL,
    ),
    3 => 
    array (
      0 => 'variable',
      1 => '.',
      2 => ':sf_format',
      3 => 'sf_format',
    ),
  ),
  'default_parameters' => 
  array (
  ),
  'default_options' => 
  array (
    'load_configuration' => true,
    'suffix' => '',
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
  ),
  'options' => 
  array (
    'suffix' => '',
    'variable_prefixes' => 
    array (
      0 => ':',
    ),
    'segment_separators' => 
    array (
      0 => '/',
      1 => '.',
    ),
    'variable_regex' => '[\\w\\d_]+',
    'text_regex' => '.+?',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
    'load_configuration' => true,
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'model' => 'Comment',
    'type' => 'list',
    'method' => NULL,
    'variable_prefix_regex' => '(?:\\:)',
    'segment_separators_regex' => '(?:/|\\.)',
    'variable_content_regex' => '[^/\\.]+',
  ),
  'pattern' => '/csCommentAdmin.:sf_format',
  'regex' => '#^
/csCommentAdmin
(?:\\.(?P<sf_format>[^/\\.]+)
)?
$#x',
  'variables' => 
  array (
    'sf_format' => ':sf_format',
  ),
  'defaults' => 
  array (
    'module' => 'csCommentAdmin',
    'action' => 'index',
    'sf_format' => 'html',
  ),
  'requirements' => 
  array (
    'id' => '\\d+',
    'sf_method' => 
    array (
      0 => 'get',
    ),
    'sf_format' => '[^/\\.]+',
  ),
  'suffix' => '',
));
$map['comment_csCommentAdmin_new'] = new sfDoctrineRoute('/csCommentAdmin/new.:sf_format', array (
  'module' => 'csCommentAdmin',
  'action' => 'new',
  'sf_format' => 'html',
), array (
  'id' => '\\d+',
  'sf_method' => 
  array (
    0 => 'get',
  ),
  'sf_format' => '[^/\\.]+',
), array (
  'suffix' => '',
  'variable_prefixes' => 
  array (
    0 => ':',
  ),
  'segment_separators' => 
  array (
    0 => '/',
    1 => '.',
  ),
  'variable_regex' => '[\\w\\d_]+',
  'text_regex' => '.+?',
  'generate_shortest_url' => true,
  'extra_parameters_as_query_string' => true,
  'load_configuration' => true,
  'default_module' => 'default',
  'default_action' => 'index',
  'debug' => '',
  'logging' => '',
  'model' => 'Comment',
  'type' => 'object',
  'variable_prefix_regex' => '(?:\\:)',
  'segment_separators_regex' => '(?:/|\\.)',
  'variable_content_regex' => '[^/\\.]+',
));
$map['comment_csCommentAdmin_new']->setCompiledData(array (
  'tokens' => 
  array (
    0 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    1 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'csCommentAdmin',
      3 => NULL,
    ),
    2 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    3 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'new',
      3 => NULL,
    ),
    4 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '.',
      3 => NULL,
    ),
    5 => 
    array (
      0 => 'variable',
      1 => '.',
      2 => ':sf_format',
      3 => 'sf_format',
    ),
  ),
  'default_parameters' => 
  array (
  ),
  'default_options' => 
  array (
    'load_configuration' => true,
    'suffix' => '',
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
  ),
  'options' => 
  array (
    'suffix' => '',
    'variable_prefixes' => 
    array (
      0 => ':',
    ),
    'segment_separators' => 
    array (
      0 => '/',
      1 => '.',
    ),
    'variable_regex' => '[\\w\\d_]+',
    'text_regex' => '.+?',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
    'load_configuration' => true,
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'model' => 'Comment',
    'type' => 'object',
    'variable_prefix_regex' => '(?:\\:)',
    'segment_separators_regex' => '(?:/|\\.)',
    'variable_content_regex' => '[^/\\.]+',
  ),
  'pattern' => '/csCommentAdmin/new.:sf_format',
  'regex' => '#^
/csCommentAdmin
/new
(?:\\.(?P<sf_format>[^/\\.]+)
)?
$#x',
  'variables' => 
  array (
    'sf_format' => ':sf_format',
  ),
  'defaults' => 
  array (
    'module' => 'csCommentAdmin',
    'action' => 'new',
    'sf_format' => 'html',
  ),
  'requirements' => 
  array (
    'id' => '\\d+',
    'sf_method' => 
    array (
      0 => 'get',
    ),
    'sf_format' => '[^/\\.]+',
  ),
  'suffix' => '',
));
$map['comment_csCommentAdmin_create'] = new sfDoctrineRoute('/csCommentAdmin.:sf_format', array (
  'module' => 'csCommentAdmin',
  'action' => 'create',
  'sf_format' => 'html',
), array (
  'id' => '\\d+',
  'sf_method' => 
  array (
    0 => 'post',
  ),
  'sf_format' => '[^/\\.]+',
), array (
  'suffix' => '',
  'variable_prefixes' => 
  array (
    0 => ':',
  ),
  'segment_separators' => 
  array (
    0 => '/',
    1 => '.',
  ),
  'variable_regex' => '[\\w\\d_]+',
  'text_regex' => '.+?',
  'generate_shortest_url' => true,
  'extra_parameters_as_query_string' => true,
  'load_configuration' => true,
  'default_module' => 'default',
  'default_action' => 'index',
  'debug' => '',
  'logging' => '',
  'model' => 'Comment',
  'type' => 'object',
  'variable_prefix_regex' => '(?:\\:)',
  'segment_separators_regex' => '(?:/|\\.)',
  'variable_content_regex' => '[^/\\.]+',
));
$map['comment_csCommentAdmin_create']->setCompiledData(array (
  'tokens' => 
  array (
    0 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    1 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'csCommentAdmin',
      3 => NULL,
    ),
    2 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '.',
      3 => NULL,
    ),
    3 => 
    array (
      0 => 'variable',
      1 => '.',
      2 => ':sf_format',
      3 => 'sf_format',
    ),
  ),
  'default_parameters' => 
  array (
  ),
  'default_options' => 
  array (
    'load_configuration' => true,
    'suffix' => '',
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
  ),
  'options' => 
  array (
    'suffix' => '',
    'variable_prefixes' => 
    array (
      0 => ':',
    ),
    'segment_separators' => 
    array (
      0 => '/',
      1 => '.',
    ),
    'variable_regex' => '[\\w\\d_]+',
    'text_regex' => '.+?',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
    'load_configuration' => true,
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'model' => 'Comment',
    'type' => 'object',
    'variable_prefix_regex' => '(?:\\:)',
    'segment_separators_regex' => '(?:/|\\.)',
    'variable_content_regex' => '[^/\\.]+',
  ),
  'pattern' => '/csCommentAdmin.:sf_format',
  'regex' => '#^
/csCommentAdmin
(?:\\.(?P<sf_format>[^/\\.]+)
)?
$#x',
  'variables' => 
  array (
    'sf_format' => ':sf_format',
  ),
  'defaults' => 
  array (
    'module' => 'csCommentAdmin',
    'action' => 'create',
    'sf_format' => 'html',
  ),
  'requirements' => 
  array (
    'id' => '\\d+',
    'sf_method' => 
    array (
      0 => 'post',
    ),
    'sf_format' => '[^/\\.]+',
  ),
  'suffix' => '',
));
$map['comment_csCommentAdmin_edit'] = new sfDoctrineRoute('/csCommentAdmin/:id/edit.:sf_format', array (
  'module' => 'csCommentAdmin',
  'action' => 'edit',
  'sf_format' => 'html',
), array (
  'id' => '\\d+',
  'sf_method' => 
  array (
    0 => 'get',
  ),
  'sf_format' => '[^/\\.]+',
), array (
  'suffix' => '',
  'variable_prefixes' => 
  array (
    0 => ':',
  ),
  'segment_separators' => 
  array (
    0 => '/',
    1 => '.',
  ),
  'variable_regex' => '[\\w\\d_]+',
  'text_regex' => '.+?',
  'generate_shortest_url' => true,
  'extra_parameters_as_query_string' => true,
  'load_configuration' => true,
  'default_module' => 'default',
  'default_action' => 'index',
  'debug' => '',
  'logging' => '',
  'model' => 'Comment',
  'type' => 'object',
  'method' => NULL,
  'variable_prefix_regex' => '(?:\\:)',
  'segment_separators_regex' => '(?:/|\\.)',
  'variable_content_regex' => '[^/\\.]+',
));
$map['comment_csCommentAdmin_edit']->setCompiledData(array (
  'tokens' => 
  array (
    0 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    1 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'csCommentAdmin',
      3 => NULL,
    ),
    2 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    3 => 
    array (
      0 => 'variable',
      1 => '/',
      2 => ':id',
      3 => 'id',
    ),
    4 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    5 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'edit',
      3 => NULL,
    ),
    6 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '.',
      3 => NULL,
    ),
    7 => 
    array (
      0 => 'variable',
      1 => '.',
      2 => ':sf_format',
      3 => 'sf_format',
    ),
  ),
  'default_parameters' => 
  array (
  ),
  'default_options' => 
  array (
    'load_configuration' => true,
    'suffix' => '',
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
  ),
  'options' => 
  array (
    'suffix' => '',
    'variable_prefixes' => 
    array (
      0 => ':',
    ),
    'segment_separators' => 
    array (
      0 => '/',
      1 => '.',
    ),
    'variable_regex' => '[\\w\\d_]+',
    'text_regex' => '.+?',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
    'load_configuration' => true,
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'model' => 'Comment',
    'type' => 'object',
    'method' => NULL,
    'variable_prefix_regex' => '(?:\\:)',
    'segment_separators_regex' => '(?:/|\\.)',
    'variable_content_regex' => '[^/\\.]+',
  ),
  'pattern' => '/csCommentAdmin/:id/edit.:sf_format',
  'regex' => '#^
/csCommentAdmin
/(?P<id>\\d+)
/edit
(?:\\.(?P<sf_format>[^/\\.]+)
)?
$#x',
  'variables' => 
  array (
    'id' => ':id',
    'sf_format' => ':sf_format',
  ),
  'defaults' => 
  array (
    'module' => 'csCommentAdmin',
    'action' => 'edit',
    'sf_format' => 'html',
  ),
  'requirements' => 
  array (
    'id' => '\\d+',
    'sf_method' => 
    array (
      0 => 'get',
    ),
    'sf_format' => '[^/\\.]+',
  ),
  'suffix' => '',
));
$map['comment_csCommentAdmin_update'] = new sfDoctrineRoute('/csCommentAdmin/:id.:sf_format', array (
  'module' => 'csCommentAdmin',
  'action' => 'update',
  'sf_format' => 'html',
), array (
  'id' => '\\d+',
  'sf_method' => 
  array (
    0 => 'put',
  ),
  'sf_format' => '[^/\\.]+',
), array (
  'suffix' => '',
  'variable_prefixes' => 
  array (
    0 => ':',
  ),
  'segment_separators' => 
  array (
    0 => '/',
    1 => '.',
  ),
  'variable_regex' => '[\\w\\d_]+',
  'text_regex' => '.+?',
  'generate_shortest_url' => true,
  'extra_parameters_as_query_string' => true,
  'load_configuration' => true,
  'default_module' => 'default',
  'default_action' => 'index',
  'debug' => '',
  'logging' => '',
  'model' => 'Comment',
  'type' => 'object',
  'method' => NULL,
  'variable_prefix_regex' => '(?:\\:)',
  'segment_separators_regex' => '(?:/|\\.)',
  'variable_content_regex' => '[^/\\.]+',
));
$map['comment_csCommentAdmin_update']->setCompiledData(array (
  'tokens' => 
  array (
    0 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    1 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'csCommentAdmin',
      3 => NULL,
    ),
    2 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    3 => 
    array (
      0 => 'variable',
      1 => '/',
      2 => ':id',
      3 => 'id',
    ),
    4 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '.',
      3 => NULL,
    ),
    5 => 
    array (
      0 => 'variable',
      1 => '.',
      2 => ':sf_format',
      3 => 'sf_format',
    ),
  ),
  'default_parameters' => 
  array (
  ),
  'default_options' => 
  array (
    'load_configuration' => true,
    'suffix' => '',
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
  ),
  'options' => 
  array (
    'suffix' => '',
    'variable_prefixes' => 
    array (
      0 => ':',
    ),
    'segment_separators' => 
    array (
      0 => '/',
      1 => '.',
    ),
    'variable_regex' => '[\\w\\d_]+',
    'text_regex' => '.+?',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
    'load_configuration' => true,
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'model' => 'Comment',
    'type' => 'object',
    'method' => NULL,
    'variable_prefix_regex' => '(?:\\:)',
    'segment_separators_regex' => '(?:/|\\.)',
    'variable_content_regex' => '[^/\\.]+',
  ),
  'pattern' => '/csCommentAdmin/:id.:sf_format',
  'regex' => '#^
/csCommentAdmin
/(?P<id>\\d+)
(?:\\.(?P<sf_format>[^/\\.]+)
)?
$#x',
  'variables' => 
  array (
    'id' => ':id',
    'sf_format' => ':sf_format',
  ),
  'defaults' => 
  array (
    'module' => 'csCommentAdmin',
    'action' => 'update',
    'sf_format' => 'html',
  ),
  'requirements' => 
  array (
    'id' => '\\d+',
    'sf_method' => 
    array (
      0 => 'put',
    ),
    'sf_format' => '[^/\\.]+',
  ),
  'suffix' => '',
));
$map['comment_csCommentAdmin_delete'] = new sfDoctrineRoute('/csCommentAdmin/:id.:sf_format', array (
  'module' => 'csCommentAdmin',
  'action' => 'delete',
  'sf_format' => 'html',
), array (
  'sf_method' => 
  array (
    0 => 'delete',
  ),
  'id' => '[^/\\.]+',
  'sf_format' => '[^/\\.]+',
), array (
  'suffix' => '',
  'variable_prefixes' => 
  array (
    0 => ':',
  ),
  'segment_separators' => 
  array (
    0 => '/',
    1 => '.',
  ),
  'variable_regex' => '[\\w\\d_]+',
  'text_regex' => '.+?',
  'generate_shortest_url' => true,
  'extra_parameters_as_query_string' => true,
  'load_configuration' => true,
  'default_module' => 'default',
  'default_action' => 'index',
  'debug' => '',
  'logging' => '',
  'model' => 'Comment',
  'type' => 'object',
  'method' => NULL,
  'variable_prefix_regex' => '(?:\\:)',
  'segment_separators_regex' => '(?:/|\\.)',
  'variable_content_regex' => '[^/\\.]+',
));
$map['comment_csCommentAdmin_delete']->setCompiledData(array (
  'tokens' => 
  array (
    0 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    1 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'csCommentAdmin',
      3 => NULL,
    ),
    2 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    3 => 
    array (
      0 => 'variable',
      1 => '/',
      2 => ':id',
      3 => 'id',
    ),
    4 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '.',
      3 => NULL,
    ),
    5 => 
    array (
      0 => 'variable',
      1 => '.',
      2 => ':sf_format',
      3 => 'sf_format',
    ),
  ),
  'default_parameters' => 
  array (
  ),
  'default_options' => 
  array (
    'load_configuration' => true,
    'suffix' => '',
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
  ),
  'options' => 
  array (
    'suffix' => '',
    'variable_prefixes' => 
    array (
      0 => ':',
    ),
    'segment_separators' => 
    array (
      0 => '/',
      1 => '.',
    ),
    'variable_regex' => '[\\w\\d_]+',
    'text_regex' => '.+?',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
    'load_configuration' => true,
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'model' => 'Comment',
    'type' => 'object',
    'method' => NULL,
    'variable_prefix_regex' => '(?:\\:)',
    'segment_separators_regex' => '(?:/|\\.)',
    'variable_content_regex' => '[^/\\.]+',
  ),
  'pattern' => '/csCommentAdmin/:id.:sf_format',
  'regex' => '#^
/csCommentAdmin
/(?P<id>[^/\\.]+)
(?:\\.(?P<sf_format>[^/\\.]+)
)?
$#x',
  'variables' => 
  array (
    'id' => ':id',
    'sf_format' => ':sf_format',
  ),
  'defaults' => 
  array (
    'module' => 'csCommentAdmin',
    'action' => 'delete',
    'sf_format' => 'html',
  ),
  'requirements' => 
  array (
    'sf_method' => 
    array (
      0 => 'delete',
    ),
    'id' => '[^/\\.]+',
    'sf_format' => '[^/\\.]+',
  ),
  'suffix' => '',
));
$map['comment_csCommentAdmin_show'] = new sfDoctrineRoute('/csCommentAdmin/:id.:sf_format', array (
  'module' => 'csCommentAdmin',
  'action' => 'show',
  'sf_format' => 'html',
), array (
  'id' => '\\d+',
  'sf_method' => 
  array (
    0 => 'get',
  ),
  'sf_format' => '[^/\\.]+',
), array (
  'suffix' => '',
  'variable_prefixes' => 
  array (
    0 => ':',
  ),
  'segment_separators' => 
  array (
    0 => '/',
    1 => '.',
  ),
  'variable_regex' => '[\\w\\d_]+',
  'text_regex' => '.+?',
  'generate_shortest_url' => true,
  'extra_parameters_as_query_string' => true,
  'load_configuration' => true,
  'default_module' => 'default',
  'default_action' => 'index',
  'debug' => '',
  'logging' => '',
  'model' => 'Comment',
  'type' => 'object',
  'method' => NULL,
  'variable_prefix_regex' => '(?:\\:)',
  'segment_separators_regex' => '(?:/|\\.)',
  'variable_content_regex' => '[^/\\.]+',
));
$map['comment_csCommentAdmin_show']->setCompiledData(array (
  'tokens' => 
  array (
    0 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    1 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'csCommentAdmin',
      3 => NULL,
    ),
    2 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    3 => 
    array (
      0 => 'variable',
      1 => '/',
      2 => ':id',
      3 => 'id',
    ),
    4 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '.',
      3 => NULL,
    ),
    5 => 
    array (
      0 => 'variable',
      1 => '.',
      2 => ':sf_format',
      3 => 'sf_format',
    ),
  ),
  'default_parameters' => 
  array (
  ),
  'default_options' => 
  array (
    'load_configuration' => true,
    'suffix' => '',
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
  ),
  'options' => 
  array (
    'suffix' => '',
    'variable_prefixes' => 
    array (
      0 => ':',
    ),
    'segment_separators' => 
    array (
      0 => '/',
      1 => '.',
    ),
    'variable_regex' => '[\\w\\d_]+',
    'text_regex' => '.+?',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
    'load_configuration' => true,
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'model' => 'Comment',
    'type' => 'object',
    'method' => NULL,
    'variable_prefix_regex' => '(?:\\:)',
    'segment_separators_regex' => '(?:/|\\.)',
    'variable_content_regex' => '[^/\\.]+',
  ),
  'pattern' => '/csCommentAdmin/:id.:sf_format',
  'regex' => '#^
/csCommentAdmin
/(?P<id>\\d+)
(?:\\.(?P<sf_format>[^/\\.]+)
)?
$#x',
  'variables' => 
  array (
    'id' => ':id',
    'sf_format' => ':sf_format',
  ),
  'defaults' => 
  array (
    'module' => 'csCommentAdmin',
    'action' => 'show',
    'sf_format' => 'html',
  ),
  'requirements' => 
  array (
    'id' => '\\d+',
    'sf_method' => 
    array (
      0 => 'get',
    ),
    'sf_format' => '[^/\\.]+',
  ),
  'suffix' => '',
));
$map['comment_csCommentAdmin_object'] = new sfDoctrineRoute('/csCommentAdmin/:id/:action.:sf_format', array (
  'module' => 'csCommentAdmin',
  'sf_format' => 'html',
), array (
  'id' => '\\d+',
  'sf_method' => 
  array (
    0 => 'get',
  ),
  'action' => '[^/\\.]+',
  'sf_format' => '[^/\\.]+',
), array (
  'suffix' => '',
  'variable_prefixes' => 
  array (
    0 => ':',
  ),
  'segment_separators' => 
  array (
    0 => '/',
    1 => '.',
  ),
  'variable_regex' => '[\\w\\d_]+',
  'text_regex' => '.+?',
  'generate_shortest_url' => true,
  'extra_parameters_as_query_string' => true,
  'load_configuration' => true,
  'default_module' => 'default',
  'default_action' => 'index',
  'debug' => '',
  'logging' => '',
  'model' => 'Comment',
  'type' => 'object',
  'method' => NULL,
  'variable_prefix_regex' => '(?:\\:)',
  'segment_separators_regex' => '(?:/|\\.)',
  'variable_content_regex' => '[^/\\.]+',
));
$map['comment_csCommentAdmin_object']->setCompiledData(array (
  'tokens' => 
  array (
    0 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    1 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'csCommentAdmin',
      3 => NULL,
    ),
    2 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    3 => 
    array (
      0 => 'variable',
      1 => '/',
      2 => ':id',
      3 => 'id',
    ),
    4 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    5 => 
    array (
      0 => 'variable',
      1 => '/',
      2 => ':action',
      3 => 'action',
    ),
    6 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '.',
      3 => NULL,
    ),
    7 => 
    array (
      0 => 'variable',
      1 => '.',
      2 => ':sf_format',
      3 => 'sf_format',
    ),
  ),
  'default_parameters' => 
  array (
  ),
  'default_options' => 
  array (
    'load_configuration' => true,
    'suffix' => '',
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
  ),
  'options' => 
  array (
    'suffix' => '',
    'variable_prefixes' => 
    array (
      0 => ':',
    ),
    'segment_separators' => 
    array (
      0 => '/',
      1 => '.',
    ),
    'variable_regex' => '[\\w\\d_]+',
    'text_regex' => '.+?',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
    'load_configuration' => true,
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'model' => 'Comment',
    'type' => 'object',
    'method' => NULL,
    'variable_prefix_regex' => '(?:\\:)',
    'segment_separators_regex' => '(?:/|\\.)',
    'variable_content_regex' => '[^/\\.]+',
  ),
  'pattern' => '/csCommentAdmin/:id/:action.:sf_format',
  'regex' => '#^
/csCommentAdmin
/(?P<id>\\d+)
/(?P<action>[^/\\.]+)
(?:\\.(?P<sf_format>[^/\\.]+)
)?
$#x',
  'variables' => 
  array (
    'id' => ':id',
    'action' => ':action',
    'sf_format' => ':sf_format',
  ),
  'defaults' => 
  array (
    'module' => 'csCommentAdmin',
    'sf_format' => 'html',
  ),
  'requirements' => 
  array (
    'id' => '\\d+',
    'sf_method' => 
    array (
      0 => 'get',
    ),
    'action' => '[^/\\.]+',
    'sf_format' => '[^/\\.]+',
  ),
  'suffix' => '',
));
$map['comment_csCommentAdmin_collection'] = new sfDoctrineRoute('/csCommentAdmin/:action/action.:sf_format', array (
  'module' => 'csCommentAdmin',
  'sf_format' => 'html',
), array (
  'id' => '\\d+',
  'sf_method' => 
  array (
    0 => 'post',
  ),
  'action' => '[^/\\.]+',
  'sf_format' => '[^/\\.]+',
), array (
  'suffix' => '',
  'variable_prefixes' => 
  array (
    0 => ':',
  ),
  'segment_separators' => 
  array (
    0 => '/',
    1 => '.',
  ),
  'variable_regex' => '[\\w\\d_]+',
  'text_regex' => '.+?',
  'generate_shortest_url' => true,
  'extra_parameters_as_query_string' => true,
  'load_configuration' => true,
  'default_module' => 'default',
  'default_action' => 'index',
  'debug' => '',
  'logging' => '',
  'model' => 'Comment',
  'type' => 'list',
  'method' => NULL,
  'variable_prefix_regex' => '(?:\\:)',
  'segment_separators_regex' => '(?:/|\\.)',
  'variable_content_regex' => '[^/\\.]+',
));
$map['comment_csCommentAdmin_collection']->setCompiledData(array (
  'tokens' => 
  array (
    0 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    1 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'csCommentAdmin',
      3 => NULL,
    ),
    2 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    3 => 
    array (
      0 => 'variable',
      1 => '/',
      2 => ':action',
      3 => 'action',
    ),
    4 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    5 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'action',
      3 => NULL,
    ),
    6 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '.',
      3 => NULL,
    ),
    7 => 
    array (
      0 => 'variable',
      1 => '.',
      2 => ':sf_format',
      3 => 'sf_format',
    ),
  ),
  'default_parameters' => 
  array (
  ),
  'default_options' => 
  array (
    'load_configuration' => true,
    'suffix' => '',
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
  ),
  'options' => 
  array (
    'suffix' => '',
    'variable_prefixes' => 
    array (
      0 => ':',
    ),
    'segment_separators' => 
    array (
      0 => '/',
      1 => '.',
    ),
    'variable_regex' => '[\\w\\d_]+',
    'text_regex' => '.+?',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
    'load_configuration' => true,
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'model' => 'Comment',
    'type' => 'list',
    'method' => NULL,
    'variable_prefix_regex' => '(?:\\:)',
    'segment_separators_regex' => '(?:/|\\.)',
    'variable_content_regex' => '[^/\\.]+',
  ),
  'pattern' => '/csCommentAdmin/:action/action.:sf_format',
  'regex' => '#^
/csCommentAdmin
/(?P<action>[^/\\.]+)
/action
(?:\\.(?P<sf_format>[^/\\.]+)
)?
$#x',
  'variables' => 
  array (
    'action' => ':action',
    'sf_format' => ':sf_format',
  ),
  'defaults' => 
  array (
    'module' => 'csCommentAdmin',
    'sf_format' => 'html',
  ),
  'requirements' => 
  array (
    'id' => '\\d+',
    'sf_method' => 
    array (
      0 => 'post',
    ),
    'action' => '[^/\\.]+',
    'sf_format' => '[^/\\.]+',
  ),
  'suffix' => '',
));
$map['sf_setting_save_all'] = new sfRoute('/sf_setting_save_all', array (
  'module' => 'sf_setting',
  'action' => 'listSaveSettings',
), array (
  'sf_method' => 'post',
), array (
  'suffix' => '',
  'variable_prefixes' => 
  array (
    0 => ':',
  ),
  'segment_separators' => 
  array (
    0 => '/',
    1 => '.',
  ),
  'variable_regex' => '[\\w\\d_]+',
  'text_regex' => '.+?',
  'generate_shortest_url' => true,
  'extra_parameters_as_query_string' => true,
  'load_configuration' => true,
  'default_module' => 'default',
  'default_action' => 'index',
  'debug' => '',
  'logging' => '',
  'variable_prefix_regex' => '(?:\\:)',
  'segment_separators_regex' => '(?:/|\\.)',
  'variable_content_regex' => '[^/\\.]+',
));
$map['sf_setting_save_all']->setCompiledData(array (
  'tokens' => 
  array (
    0 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    1 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'sf_setting_save_all',
      3 => NULL,
    ),
  ),
  'default_parameters' => 
  array (
  ),
  'default_options' => 
  array (
    'load_configuration' => true,
    'suffix' => '',
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
  ),
  'options' => 
  array (
    'suffix' => '',
    'variable_prefixes' => 
    array (
      0 => ':',
    ),
    'segment_separators' => 
    array (
      0 => '/',
      1 => '.',
    ),
    'variable_regex' => '[\\w\\d_]+',
    'text_regex' => '.+?',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
    'load_configuration' => true,
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'variable_prefix_regex' => '(?:\\:)',
    'segment_separators_regex' => '(?:/|\\.)',
    'variable_content_regex' => '[^/\\.]+',
  ),
  'pattern' => '/sf_setting_save_all',
  'regex' => '#^
/sf_setting_save_all
$#x',
  'variables' => 
  array (
  ),
  'defaults' => 
  array (
    'module' => 'sf_setting',
    'action' => 'listSaveSettings',
  ),
  'requirements' => 
  array (
    'sf_method' => 'post',
  ),
  'suffix' => '',
));
$map['plugins'] = new sfRoute('/plugins', array (
  'module' => 'plugin',
  'action' => 'list',
), array (
), array (
  'suffix' => '',
  'variable_prefixes' => 
  array (
    0 => ':',
  ),
  'segment_separators' => 
  array (
    0 => '/',
    1 => '.',
  ),
  'variable_regex' => '[\\w\\d_]+',
  'text_regex' => '.+?',
  'generate_shortest_url' => true,
  'extra_parameters_as_query_string' => true,
  'load_configuration' => true,
  'default_module' => 'default',
  'default_action' => 'index',
  'debug' => '',
  'logging' => '',
  'variable_prefix_regex' => '(?:\\:)',
  'segment_separators_regex' => '(?:/|\\.)',
  'variable_content_regex' => '[^/\\.]+',
));
$map['plugins']->setCompiledData(array (
  'tokens' => 
  array (
    0 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    1 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'plugins',
      3 => NULL,
    ),
  ),
  'default_parameters' => 
  array (
  ),
  'default_options' => 
  array (
    'load_configuration' => true,
    'suffix' => '',
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
  ),
  'options' => 
  array (
    'suffix' => '',
    'variable_prefixes' => 
    array (
      0 => ':',
    ),
    'segment_separators' => 
    array (
      0 => '/',
      1 => '.',
    ),
    'variable_regex' => '[\\w\\d_]+',
    'text_regex' => '.+?',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
    'load_configuration' => true,
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'variable_prefix_regex' => '(?:\\:)',
    'segment_separators_regex' => '(?:/|\\.)',
    'variable_content_regex' => '[^/\\.]+',
  ),
  'pattern' => '/plugins',
  'regex' => '#^
/plugins
$#x',
  'variables' => 
  array (
  ),
  'defaults' => 
  array (
    'module' => 'plugin',
    'action' => 'list',
  ),
  'requirements' => 
  array (
  ),
  'suffix' => '',
));
$map['plugin_categories'] = new sfRoute('/plugins/categories', array (
  'module' => 'plugin',
  'action' => 'categories',
), array (
), array (
  'suffix' => '',
  'variable_prefixes' => 
  array (
    0 => ':',
  ),
  'segment_separators' => 
  array (
    0 => '/',
    1 => '.',
  ),
  'variable_regex' => '[\\w\\d_]+',
  'text_regex' => '.+?',
  'generate_shortest_url' => true,
  'extra_parameters_as_query_string' => true,
  'load_configuration' => true,
  'default_module' => 'default',
  'default_action' => 'index',
  'debug' => '',
  'logging' => '',
  'variable_prefix_regex' => '(?:\\:)',
  'segment_separators_regex' => '(?:/|\\.)',
  'variable_content_regex' => '[^/\\.]+',
));
$map['plugin_categories']->setCompiledData(array (
  'tokens' => 
  array (
    0 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    1 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'plugins',
      3 => NULL,
    ),
    2 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    3 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'categories',
      3 => NULL,
    ),
  ),
  'default_parameters' => 
  array (
  ),
  'default_options' => 
  array (
    'load_configuration' => true,
    'suffix' => '',
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
  ),
  'options' => 
  array (
    'suffix' => '',
    'variable_prefixes' => 
    array (
      0 => ':',
    ),
    'segment_separators' => 
    array (
      0 => '/',
      1 => '.',
    ),
    'variable_regex' => '[\\w\\d_]+',
    'text_regex' => '.+?',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
    'load_configuration' => true,
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'variable_prefix_regex' => '(?:\\:)',
    'segment_separators_regex' => '(?:/|\\.)',
    'variable_content_regex' => '[^/\\.]+',
  ),
  'pattern' => '/plugins/categories',
  'regex' => '#^
/plugins
/categories
$#x',
  'variables' => 
  array (
  ),
  'defaults' => 
  array (
    'module' => 'plugin',
    'action' => 'categories',
  ),
  'requirements' => 
  array (
  ),
  'suffix' => '',
));
$map['plugins_by_category'] = new sfRoute('/plugins/categories/:slug', array (
  'module' => 'plugin',
  'action' => 'byCategory',
), array (
  'slug' => '[^/\\.]+',
), array (
  'suffix' => '',
  'variable_prefixes' => 
  array (
    0 => ':',
  ),
  'segment_separators' => 
  array (
    0 => '/',
    1 => '.',
  ),
  'variable_regex' => '[\\w\\d_]+',
  'text_regex' => '.+?',
  'generate_shortest_url' => true,
  'extra_parameters_as_query_string' => true,
  'load_configuration' => true,
  'default_module' => 'default',
  'default_action' => 'index',
  'debug' => '',
  'logging' => '',
  'variable_prefix_regex' => '(?:\\:)',
  'segment_separators_regex' => '(?:/|\\.)',
  'variable_content_regex' => '[^/\\.]+',
));
$map['plugins_by_category']->setCompiledData(array (
  'tokens' => 
  array (
    0 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    1 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'plugins',
      3 => NULL,
    ),
    2 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    3 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'categories',
      3 => NULL,
    ),
    4 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    5 => 
    array (
      0 => 'variable',
      1 => '/',
      2 => ':slug',
      3 => 'slug',
    ),
  ),
  'default_parameters' => 
  array (
  ),
  'default_options' => 
  array (
    'load_configuration' => true,
    'suffix' => '',
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
  ),
  'options' => 
  array (
    'suffix' => '',
    'variable_prefixes' => 
    array (
      0 => ':',
    ),
    'segment_separators' => 
    array (
      0 => '/',
      1 => '.',
    ),
    'variable_regex' => '[\\w\\d_]+',
    'text_regex' => '.+?',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
    'load_configuration' => true,
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'variable_prefix_regex' => '(?:\\:)',
    'segment_separators_regex' => '(?:/|\\.)',
    'variable_content_regex' => '[^/\\.]+',
  ),
  'pattern' => '/plugins/categories/:slug',
  'regex' => '#^
/plugins
/categories
/(?P<slug>[^/\\.]+)
$#x',
  'variables' => 
  array (
    'slug' => ':slug',
  ),
  'defaults' => 
  array (
    'module' => 'plugin',
    'action' => 'byCategory',
  ),
  'requirements' => 
  array (
    'slug' => '[^/\\.]+',
  ),
  'suffix' => '',
));
$map['plugin_register'] = new sfRoute('/plugins/new', array (
  'module' => 'plugin',
  'action' => 'register',
), array (
), array (
  'suffix' => '',
  'variable_prefixes' => 
  array (
    0 => ':',
  ),
  'segment_separators' => 
  array (
    0 => '/',
    1 => '.',
  ),
  'variable_regex' => '[\\w\\d_]+',
  'text_regex' => '.+?',
  'generate_shortest_url' => true,
  'extra_parameters_as_query_string' => true,
  'load_configuration' => true,
  'default_module' => 'default',
  'default_action' => 'index',
  'debug' => '',
  'logging' => '',
  'variable_prefix_regex' => '(?:\\:)',
  'segment_separators_regex' => '(?:/|\\.)',
  'variable_content_regex' => '[^/\\.]+',
));
$map['plugin_register']->setCompiledData(array (
  'tokens' => 
  array (
    0 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    1 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'plugins',
      3 => NULL,
    ),
    2 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    3 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'new',
      3 => NULL,
    ),
  ),
  'default_parameters' => 
  array (
  ),
  'default_options' => 
  array (
    'load_configuration' => true,
    'suffix' => '',
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
  ),
  'options' => 
  array (
    'suffix' => '',
    'variable_prefixes' => 
    array (
      0 => ':',
    ),
    'segment_separators' => 
    array (
      0 => '/',
      1 => '.',
    ),
    'variable_regex' => '[\\w\\d_]+',
    'text_regex' => '.+?',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
    'load_configuration' => true,
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'variable_prefix_regex' => '(?:\\:)',
    'segment_separators_regex' => '(?:/|\\.)',
    'variable_content_regex' => '[^/\\.]+',
  ),
  'pattern' => '/plugins/new',
  'regex' => '#^
/plugins
/new
$#x',
  'variables' => 
  array (
  ),
  'defaults' => 
  array (
    'module' => 'plugin',
    'action' => 'register',
  ),
  'requirements' => 
  array (
  ),
  'suffix' => '',
));
$map['plugins_view_all'] = new sfRoute('/plugins/all', array (
  'module' => 'plugin',
  'action' => 'index',
), array (
), array (
  'suffix' => '',
  'variable_prefixes' => 
  array (
    0 => ':',
  ),
  'segment_separators' => 
  array (
    0 => '/',
    1 => '.',
  ),
  'variable_regex' => '[\\w\\d_]+',
  'text_regex' => '.+?',
  'generate_shortest_url' => true,
  'extra_parameters_as_query_string' => true,
  'load_configuration' => true,
  'default_module' => 'default',
  'default_action' => 'index',
  'debug' => '',
  'logging' => '',
  'variable_prefix_regex' => '(?:\\:)',
  'segment_separators_regex' => '(?:/|\\.)',
  'variable_content_regex' => '[^/\\.]+',
));
$map['plugins_view_all']->setCompiledData(array (
  'tokens' => 
  array (
    0 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    1 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'plugins',
      3 => NULL,
    ),
    2 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    3 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'all',
      3 => NULL,
    ),
  ),
  'default_parameters' => 
  array (
  ),
  'default_options' => 
  array (
    'load_configuration' => true,
    'suffix' => '',
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
  ),
  'options' => 
  array (
    'suffix' => '',
    'variable_prefixes' => 
    array (
      0 => ':',
    ),
    'segment_separators' => 
    array (
      0 => '/',
      1 => '.',
    ),
    'variable_regex' => '[\\w\\d_]+',
    'text_regex' => '.+?',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
    'load_configuration' => true,
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'variable_prefix_regex' => '(?:\\:)',
    'segment_separators_regex' => '(?:/|\\.)',
    'variable_content_regex' => '[^/\\.]+',
  ),
  'pattern' => '/plugins/all',
  'regex' => '#^
/plugins
/all
$#x',
  'variables' => 
  array (
  ),
  'defaults' => 
  array (
    'module' => 'plugin',
    'action' => 'index',
  ),
  'requirements' => 
  array (
  ),
  'suffix' => '',
));
$map['plugin_rate_ajax'] = new sfRoute('/plugins/rate', array (
  'module' => 'plugin',
  'action' => 'rate',
), array (
), array (
  'suffix' => '',
  'variable_prefixes' => 
  array (
    0 => ':',
  ),
  'segment_separators' => 
  array (
    0 => '/',
    1 => '.',
  ),
  'variable_regex' => '[\\w\\d_]+',
  'text_regex' => '.+?',
  'generate_shortest_url' => true,
  'extra_parameters_as_query_string' => true,
  'load_configuration' => true,
  'default_module' => 'default',
  'default_action' => 'index',
  'debug' => '',
  'logging' => '',
  'variable_prefix_regex' => '(?:\\:)',
  'segment_separators_regex' => '(?:/|\\.)',
  'variable_content_regex' => '[^/\\.]+',
));
$map['plugin_rate_ajax']->setCompiledData(array (
  'tokens' => 
  array (
    0 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    1 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'plugins',
      3 => NULL,
    ),
    2 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    3 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'rate',
      3 => NULL,
    ),
  ),
  'default_parameters' => 
  array (
  ),
  'default_options' => 
  array (
    'load_configuration' => true,
    'suffix' => '',
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
  ),
  'options' => 
  array (
    'suffix' => '',
    'variable_prefixes' => 
    array (
      0 => ':',
    ),
    'segment_separators' => 
    array (
      0 => '/',
      1 => '.',
    ),
    'variable_regex' => '[\\w\\d_]+',
    'text_regex' => '.+?',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
    'load_configuration' => true,
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'variable_prefix_regex' => '(?:\\:)',
    'segment_separators_regex' => '(?:/|\\.)',
    'variable_content_regex' => '[^/\\.]+',
  ),
  'pattern' => '/plugins/rate',
  'regex' => '#^
/plugins
/rate
$#x',
  'variables' => 
  array (
  ),
  'defaults' => 
  array (
    'module' => 'plugin',
    'action' => 'rate',
  ),
  'requirements' => 
  array (
  ),
  'suffix' => '',
));
$map['plugin_search'] = new sfRoute('/plugins/search', array (
  'module' => 'plugin',
  'action' => 'search',
), array (
  'sf_method' => 'POST',
), array (
  'suffix' => '',
  'variable_prefixes' => 
  array (
    0 => ':',
  ),
  'segment_separators' => 
  array (
    0 => '/',
    1 => '.',
  ),
  'variable_regex' => '[\\w\\d_]+',
  'text_regex' => '.+?',
  'generate_shortest_url' => true,
  'extra_parameters_as_query_string' => true,
  'load_configuration' => true,
  'default_module' => 'default',
  'default_action' => 'index',
  'debug' => '',
  'logging' => '',
  'variable_prefix_regex' => '(?:\\:)',
  'segment_separators_regex' => '(?:/|\\.)',
  'variable_content_regex' => '[^/\\.]+',
));
$map['plugin_search']->setCompiledData(array (
  'tokens' => 
  array (
    0 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    1 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'plugins',
      3 => NULL,
    ),
    2 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    3 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'search',
      3 => NULL,
    ),
  ),
  'default_parameters' => 
  array (
  ),
  'default_options' => 
  array (
    'load_configuration' => true,
    'suffix' => '',
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
  ),
  'options' => 
  array (
    'suffix' => '',
    'variable_prefixes' => 
    array (
      0 => ':',
    ),
    'segment_separators' => 
    array (
      0 => '/',
      1 => '.',
    ),
    'variable_regex' => '[\\w\\d_]+',
    'text_regex' => '.+?',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
    'load_configuration' => true,
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'variable_prefix_regex' => '(?:\\:)',
    'segment_separators_regex' => '(?:/|\\.)',
    'variable_content_regex' => '[^/\\.]+',
  ),
  'pattern' => '/plugins/search',
  'regex' => '#^
/plugins
/search
$#x',
  'variables' => 
  array (
  ),
  'defaults' => 
  array (
    'module' => 'plugin',
    'action' => 'search',
  ),
  'requirements' => 
  array (
    'sf_method' => 'POST',
  ),
  'suffix' => '',
));
$map['plugin'] = new sfRoute('/plugins/:title', array (
  'module' => 'plugin',
  'action' => 'show',
), array (
  'title' => '[^/\\.]+',
), array (
  'suffix' => '',
  'variable_prefixes' => 
  array (
    0 => ':',
  ),
  'segment_separators' => 
  array (
    0 => '/',
    1 => '.',
  ),
  'variable_regex' => '[\\w\\d_]+',
  'text_regex' => '.+?',
  'generate_shortest_url' => true,
  'extra_parameters_as_query_string' => true,
  'load_configuration' => true,
  'default_module' => 'default',
  'default_action' => 'index',
  'debug' => '',
  'logging' => '',
  'variable_prefix_regex' => '(?:\\:)',
  'segment_separators_regex' => '(?:/|\\.)',
  'variable_content_regex' => '[^/\\.]+',
));
$map['plugin']->setCompiledData(array (
  'tokens' => 
  array (
    0 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    1 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'plugins',
      3 => NULL,
    ),
    2 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    3 => 
    array (
      0 => 'variable',
      1 => '/',
      2 => ':title',
      3 => 'title',
    ),
  ),
  'default_parameters' => 
  array (
  ),
  'default_options' => 
  array (
    'load_configuration' => true,
    'suffix' => '',
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
  ),
  'options' => 
  array (
    'suffix' => '',
    'variable_prefixes' => 
    array (
      0 => ':',
    ),
    'segment_separators' => 
    array (
      0 => '/',
      1 => '.',
    ),
    'variable_regex' => '[\\w\\d_]+',
    'text_regex' => '.+?',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
    'load_configuration' => true,
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'variable_prefix_regex' => '(?:\\:)',
    'segment_separators_regex' => '(?:/|\\.)',
    'variable_content_regex' => '[^/\\.]+',
  ),
  'pattern' => '/plugins/:title',
  'regex' => '#^
/plugins
/(?P<title>[^/\\.]+)
$#x',
  'variables' => 
  array (
    'title' => ':title',
  ),
  'defaults' => 
  array (
    'module' => 'plugin',
    'action' => 'show',
  ),
  'requirements' => 
  array (
    'title' => '[^/\\.]+',
  ),
  'suffix' => '',
));
$map['plugin_claim'] = new sfRoute('/plugins/:title/claim', array (
  'module' => 'plugin',
  'action' => 'claim',
), array (
  'title' => '[^/\\.]+',
), array (
  'suffix' => '',
  'variable_prefixes' => 
  array (
    0 => ':',
  ),
  'segment_separators' => 
  array (
    0 => '/',
    1 => '.',
  ),
  'variable_regex' => '[\\w\\d_]+',
  'text_regex' => '.+?',
  'generate_shortest_url' => true,
  'extra_parameters_as_query_string' => true,
  'load_configuration' => true,
  'default_module' => 'default',
  'default_action' => 'index',
  'debug' => '',
  'logging' => '',
  'variable_prefix_regex' => '(?:\\:)',
  'segment_separators_regex' => '(?:/|\\.)',
  'variable_content_regex' => '[^/\\.]+',
));
$map['plugin_claim']->setCompiledData(array (
  'tokens' => 
  array (
    0 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    1 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'plugins',
      3 => NULL,
    ),
    2 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    3 => 
    array (
      0 => 'variable',
      1 => '/',
      2 => ':title',
      3 => 'title',
    ),
    4 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    5 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'claim',
      3 => NULL,
    ),
  ),
  'default_parameters' => 
  array (
  ),
  'default_options' => 
  array (
    'load_configuration' => true,
    'suffix' => '',
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
  ),
  'options' => 
  array (
    'suffix' => '',
    'variable_prefixes' => 
    array (
      0 => ':',
    ),
    'segment_separators' => 
    array (
      0 => '/',
      1 => '.',
    ),
    'variable_regex' => '[\\w\\d_]+',
    'text_regex' => '.+?',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
    'load_configuration' => true,
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'variable_prefix_regex' => '(?:\\:)',
    'segment_separators_regex' => '(?:/|\\.)',
    'variable_content_regex' => '[^/\\.]+',
  ),
  'pattern' => '/plugins/:title/claim',
  'regex' => '#^
/plugins
/(?P<title>[^/\\.]+)
/claim
$#x',
  'variables' => 
  array (
    'title' => ':title',
  ),
  'defaults' => 
  array (
    'module' => 'plugin',
    'action' => 'claim',
  ),
  'requirements' => 
  array (
    'title' => '[^/\\.]+',
  ),
  'suffix' => '',
));
$map['plugin_edit'] = new sfRoute('/plugins/:title/edit', array (
  'module' => 'plugin',
  'action' => 'edit',
), array (
  'title' => '[^/\\.]+',
), array (
  'suffix' => '',
  'variable_prefixes' => 
  array (
    0 => ':',
  ),
  'segment_separators' => 
  array (
    0 => '/',
    1 => '.',
  ),
  'variable_regex' => '[\\w\\d_]+',
  'text_regex' => '.+?',
  'generate_shortest_url' => true,
  'extra_parameters_as_query_string' => true,
  'load_configuration' => true,
  'default_module' => 'default',
  'default_action' => 'index',
  'debug' => '',
  'logging' => '',
  'variable_prefix_regex' => '(?:\\:)',
  'segment_separators_regex' => '(?:/|\\.)',
  'variable_content_regex' => '[^/\\.]+',
));
$map['plugin_edit']->setCompiledData(array (
  'tokens' => 
  array (
    0 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    1 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'plugins',
      3 => NULL,
    ),
    2 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    3 => 
    array (
      0 => 'variable',
      1 => '/',
      2 => ':title',
      3 => 'title',
    ),
    4 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    5 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'edit',
      3 => NULL,
    ),
  ),
  'default_parameters' => 
  array (
  ),
  'default_options' => 
  array (
    'load_configuration' => true,
    'suffix' => '',
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
  ),
  'options' => 
  array (
    'suffix' => '',
    'variable_prefixes' => 
    array (
      0 => ':',
    ),
    'segment_separators' => 
    array (
      0 => '/',
      1 => '.',
    ),
    'variable_regex' => '[\\w\\d_]+',
    'text_regex' => '.+?',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
    'load_configuration' => true,
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'variable_prefix_regex' => '(?:\\:)',
    'segment_separators_regex' => '(?:/|\\.)',
    'variable_content_regex' => '[^/\\.]+',
  ),
  'pattern' => '/plugins/:title/edit',
  'regex' => '#^
/plugins
/(?P<title>[^/\\.]+)
/edit
$#x',
  'variables' => 
  array (
    'title' => ':title',
  ),
  'defaults' => 
  array (
    'module' => 'plugin',
    'action' => 'edit',
  ),
  'requirements' => 
  array (
    'title' => '[^/\\.]+',
  ),
  'suffix' => '',
));
$map['plugin_rate'] = new sfRoute('/plugins/:title/rate/:rating', array (
  'module' => 'plugin',
  'action' => 'rate',
), array (
  'rating' => '\\d+',
  'title' => '[^/\\.]+',
), array (
  'suffix' => '',
  'variable_prefixes' => 
  array (
    0 => ':',
  ),
  'segment_separators' => 
  array (
    0 => '/',
    1 => '.',
  ),
  'variable_regex' => '[\\w\\d_]+',
  'text_regex' => '.+?',
  'generate_shortest_url' => true,
  'extra_parameters_as_query_string' => true,
  'load_configuration' => true,
  'default_module' => 'default',
  'default_action' => 'index',
  'debug' => '',
  'logging' => '',
  'variable_prefix_regex' => '(?:\\:)',
  'segment_separators_regex' => '(?:/|\\.)',
  'variable_content_regex' => '[^/\\.]+',
));
$map['plugin_rate']->setCompiledData(array (
  'tokens' => 
  array (
    0 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    1 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'plugins',
      3 => NULL,
    ),
    2 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    3 => 
    array (
      0 => 'variable',
      1 => '/',
      2 => ':title',
      3 => 'title',
    ),
    4 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    5 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'rate',
      3 => NULL,
    ),
    6 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    7 => 
    array (
      0 => 'variable',
      1 => '/',
      2 => ':rating',
      3 => 'rating',
    ),
  ),
  'default_parameters' => 
  array (
  ),
  'default_options' => 
  array (
    'load_configuration' => true,
    'suffix' => '',
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
  ),
  'options' => 
  array (
    'suffix' => '',
    'variable_prefixes' => 
    array (
      0 => ':',
    ),
    'segment_separators' => 
    array (
      0 => '/',
      1 => '.',
    ),
    'variable_regex' => '[\\w\\d_]+',
    'text_regex' => '.+?',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
    'load_configuration' => true,
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'variable_prefix_regex' => '(?:\\:)',
    'segment_separators_regex' => '(?:/|\\.)',
    'variable_content_regex' => '[^/\\.]+',
  ),
  'pattern' => '/plugins/:title/rate/:rating',
  'regex' => '#^
/plugins
/(?P<title>[^/\\.]+)
/rate
/(?P<rating>\\d+)
$#x',
  'variables' => 
  array (
    'title' => ':title',
    'rating' => ':rating',
  ),
  'defaults' => 
  array (
    'module' => 'plugin',
    'action' => 'rate',
  ),
  'requirements' => 
  array (
    'rating' => '\\d+',
    'title' => '[^/\\.]+',
  ),
  'suffix' => '',
));
$map['plugin_autocomplete'] = new sfRoute('/plugins/search/auto', array (
  'module' => 'plugin',
  'action' => 'autocomplete',
), array (
), array (
  'suffix' => '',
  'variable_prefixes' => 
  array (
    0 => ':',
  ),
  'segment_separators' => 
  array (
    0 => '/',
    1 => '.',
  ),
  'variable_regex' => '[\\w\\d_]+',
  'text_regex' => '.+?',
  'generate_shortest_url' => true,
  'extra_parameters_as_query_string' => true,
  'load_configuration' => true,
  'default_module' => 'default',
  'default_action' => 'index',
  'debug' => '',
  'logging' => '',
  'variable_prefix_regex' => '(?:\\:)',
  'segment_separators_regex' => '(?:/|\\.)',
  'variable_content_regex' => '[^/\\.]+',
));
$map['plugin_autocomplete']->setCompiledData(array (
  'tokens' => 
  array (
    0 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    1 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'plugins',
      3 => NULL,
    ),
    2 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    3 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'search',
      3 => NULL,
    ),
    4 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    5 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'auto',
      3 => NULL,
    ),
  ),
  'default_parameters' => 
  array (
  ),
  'default_options' => 
  array (
    'load_configuration' => true,
    'suffix' => '',
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
  ),
  'options' => 
  array (
    'suffix' => '',
    'variable_prefixes' => 
    array (
      0 => ':',
    ),
    'segment_separators' => 
    array (
      0 => '/',
      1 => '.',
    ),
    'variable_regex' => '[\\w\\d_]+',
    'text_regex' => '.+?',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
    'load_configuration' => true,
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'variable_prefix_regex' => '(?:\\:)',
    'segment_separators_regex' => '(?:/|\\.)',
    'variable_content_regex' => '[^/\\.]+',
  ),
  'pattern' => '/plugins/search/auto',
  'regex' => '#^
/plugins
/search
/auto
$#x',
  'variables' => 
  array (
  ),
  'defaults' => 
  array (
    'module' => 'plugin',
    'action' => 'autocomplete',
  ),
  'requirements' => 
  array (
  ),
  'suffix' => '',
));
$map['plugin_autocomplete_verbose'] = new sfRoute('/plugins/search/auto/full', array (
  'module' => 'plugin',
  'action' => 'verboseAutocomplete',
), array (
), array (
  'suffix' => '',
  'variable_prefixes' => 
  array (
    0 => ':',
  ),
  'segment_separators' => 
  array (
    0 => '/',
    1 => '.',
  ),
  'variable_regex' => '[\\w\\d_]+',
  'text_regex' => '.+?',
  'generate_shortest_url' => true,
  'extra_parameters_as_query_string' => true,
  'load_configuration' => true,
  'default_module' => 'default',
  'default_action' => 'index',
  'debug' => '',
  'logging' => '',
  'variable_prefix_regex' => '(?:\\:)',
  'segment_separators_regex' => '(?:/|\\.)',
  'variable_content_regex' => '[^/\\.]+',
));
$map['plugin_autocomplete_verbose']->setCompiledData(array (
  'tokens' => 
  array (
    0 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    1 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'plugins',
      3 => NULL,
    ),
    2 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    3 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'search',
      3 => NULL,
    ),
    4 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    5 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'auto',
      3 => NULL,
    ),
    6 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    7 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'full',
      3 => NULL,
    ),
  ),
  'default_parameters' => 
  array (
  ),
  'default_options' => 
  array (
    'load_configuration' => true,
    'suffix' => '',
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
  ),
  'options' => 
  array (
    'suffix' => '',
    'variable_prefixes' => 
    array (
      0 => ':',
    ),
    'segment_separators' => 
    array (
      0 => '/',
      1 => '.',
    ),
    'variable_regex' => '[\\w\\d_]+',
    'text_regex' => '.+?',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
    'load_configuration' => true,
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'variable_prefix_regex' => '(?:\\:)',
    'segment_separators_regex' => '(?:/|\\.)',
    'variable_content_regex' => '[^/\\.]+',
  ),
  'pattern' => '/plugins/search/auto/full',
  'regex' => '#^
/plugins
/search
/auto
/full
$#x',
  'variables' => 
  array (
  ),
  'defaults' => 
  array (
    'module' => 'plugin',
    'action' => 'verboseAutocomplete',
  ),
  'requirements' => 
  array (
  ),
  'suffix' => '',
));
$map['community_lists'] = new sfRoute('/lists', array (
  'module' => 'list',
  'action' => 'index',
), array (
), array (
  'suffix' => '',
  'variable_prefixes' => 
  array (
    0 => ':',
  ),
  'segment_separators' => 
  array (
    0 => '/',
    1 => '.',
  ),
  'variable_regex' => '[\\w\\d_]+',
  'text_regex' => '.+?',
  'generate_shortest_url' => true,
  'extra_parameters_as_query_string' => true,
  'load_configuration' => true,
  'default_module' => 'default',
  'default_action' => 'index',
  'debug' => '',
  'logging' => '',
  'variable_prefix_regex' => '(?:\\:)',
  'segment_separators_regex' => '(?:/|\\.)',
  'variable_content_regex' => '[^/\\.]+',
));
$map['community_lists']->setCompiledData(array (
  'tokens' => 
  array (
    0 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    1 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'lists',
      3 => NULL,
    ),
  ),
  'default_parameters' => 
  array (
  ),
  'default_options' => 
  array (
    'load_configuration' => true,
    'suffix' => '',
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
  ),
  'options' => 
  array (
    'suffix' => '',
    'variable_prefixes' => 
    array (
      0 => ':',
    ),
    'segment_separators' => 
    array (
      0 => '/',
      1 => '.',
    ),
    'variable_regex' => '[\\w\\d_]+',
    'text_regex' => '.+?',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
    'load_configuration' => true,
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'variable_prefix_regex' => '(?:\\:)',
    'segment_separators_regex' => '(?:/|\\.)',
    'variable_content_regex' => '[^/\\.]+',
  ),
  'pattern' => '/lists',
  'regex' => '#^
/lists
$#x',
  'variables' => 
  array (
  ),
  'defaults' => 
  array (
    'module' => 'list',
    'action' => 'index',
  ),
  'requirements' => 
  array (
  ),
  'suffix' => '',
));
$map['list_rate_ajax'] = new sfRoute('/lists/rate', array (
  'module' => 'list',
  'action' => 'rate',
), array (
), array (
  'suffix' => '',
  'variable_prefixes' => 
  array (
    0 => ':',
  ),
  'segment_separators' => 
  array (
    0 => '/',
    1 => '.',
  ),
  'variable_regex' => '[\\w\\d_]+',
  'text_regex' => '.+?',
  'generate_shortest_url' => true,
  'extra_parameters_as_query_string' => true,
  'load_configuration' => true,
  'default_module' => 'default',
  'default_action' => 'index',
  'debug' => '',
  'logging' => '',
  'variable_prefix_regex' => '(?:\\:)',
  'segment_separators_regex' => '(?:/|\\.)',
  'variable_content_regex' => '[^/\\.]+',
));
$map['list_rate_ajax']->setCompiledData(array (
  'tokens' => 
  array (
    0 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    1 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'lists',
      3 => NULL,
    ),
    2 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    3 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'rate',
      3 => NULL,
    ),
  ),
  'default_parameters' => 
  array (
  ),
  'default_options' => 
  array (
    'load_configuration' => true,
    'suffix' => '',
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
  ),
  'options' => 
  array (
    'suffix' => '',
    'variable_prefixes' => 
    array (
      0 => ':',
    ),
    'segment_separators' => 
    array (
      0 => '/',
      1 => '.',
    ),
    'variable_regex' => '[\\w\\d_]+',
    'text_regex' => '.+?',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
    'load_configuration' => true,
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'variable_prefix_regex' => '(?:\\:)',
    'segment_separators_regex' => '(?:/|\\.)',
    'variable_content_regex' => '[^/\\.]+',
  ),
  'pattern' => '/lists/rate',
  'regex' => '#^
/lists
/rate
$#x',
  'variables' => 
  array (
  ),
  'defaults' => 
  array (
    'module' => 'list',
    'action' => 'rate',
  ),
  'requirements' => 
  array (
  ),
  'suffix' => '',
));
$map['list_item_add_ajax'] = new sfRoute('/lists/item/add', array (
  'module' => 'list',
  'action' => 'addListItemAjax',
), array (
), array (
  'suffix' => '',
  'variable_prefixes' => 
  array (
    0 => ':',
  ),
  'segment_separators' => 
  array (
    0 => '/',
    1 => '.',
  ),
  'variable_regex' => '[\\w\\d_]+',
  'text_regex' => '.+?',
  'generate_shortest_url' => true,
  'extra_parameters_as_query_string' => true,
  'load_configuration' => true,
  'default_module' => 'default',
  'default_action' => 'index',
  'debug' => '',
  'logging' => '',
  'variable_prefix_regex' => '(?:\\:)',
  'segment_separators_regex' => '(?:/|\\.)',
  'variable_content_regex' => '[^/\\.]+',
));
$map['list_item_add_ajax']->setCompiledData(array (
  'tokens' => 
  array (
    0 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    1 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'lists',
      3 => NULL,
    ),
    2 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    3 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'item',
      3 => NULL,
    ),
    4 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    5 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'add',
      3 => NULL,
    ),
  ),
  'default_parameters' => 
  array (
  ),
  'default_options' => 
  array (
    'load_configuration' => true,
    'suffix' => '',
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
  ),
  'options' => 
  array (
    'suffix' => '',
    'variable_prefixes' => 
    array (
      0 => ':',
    ),
    'segment_separators' => 
    array (
      0 => '/',
      1 => '.',
    ),
    'variable_regex' => '[\\w\\d_]+',
    'text_regex' => '.+?',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
    'load_configuration' => true,
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'variable_prefix_regex' => '(?:\\:)',
    'segment_separators_regex' => '(?:/|\\.)',
    'variable_content_regex' => '[^/\\.]+',
  ),
  'pattern' => '/lists/item/add',
  'regex' => '#^
/lists
/item
/add
$#x',
  'variables' => 
  array (
  ),
  'defaults' => 
  array (
    'module' => 'list',
    'action' => 'addListItemAjax',
  ),
  'requirements' => 
  array (
  ),
  'suffix' => '',
));
$map['list_create'] = new sfRoute('/lists/create', array (
  'module' => 'list',
  'action' => 'create',
), array (
), array (
  'suffix' => '',
  'variable_prefixes' => 
  array (
    0 => ':',
  ),
  'segment_separators' => 
  array (
    0 => '/',
    1 => '.',
  ),
  'variable_regex' => '[\\w\\d_]+',
  'text_regex' => '.+?',
  'generate_shortest_url' => true,
  'extra_parameters_as_query_string' => true,
  'load_configuration' => true,
  'default_module' => 'default',
  'default_action' => 'index',
  'debug' => '',
  'logging' => '',
  'variable_prefix_regex' => '(?:\\:)',
  'segment_separators_regex' => '(?:/|\\.)',
  'variable_content_regex' => '[^/\\.]+',
));
$map['list_create']->setCompiledData(array (
  'tokens' => 
  array (
    0 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    1 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'lists',
      3 => NULL,
    ),
    2 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    3 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'create',
      3 => NULL,
    ),
  ),
  'default_parameters' => 
  array (
  ),
  'default_options' => 
  array (
    'load_configuration' => true,
    'suffix' => '',
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
  ),
  'options' => 
  array (
    'suffix' => '',
    'variable_prefixes' => 
    array (
      0 => ':',
    ),
    'segment_separators' => 
    array (
      0 => '/',
      1 => '.',
    ),
    'variable_regex' => '[\\w\\d_]+',
    'text_regex' => '.+?',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
    'load_configuration' => true,
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'variable_prefix_regex' => '(?:\\:)',
    'segment_separators_regex' => '(?:/|\\.)',
    'variable_content_regex' => '[^/\\.]+',
  ),
  'pattern' => '/lists/create',
  'regex' => '#^
/lists
/create
$#x',
  'variables' => 
  array (
  ),
  'defaults' => 
  array (
    'module' => 'list',
    'action' => 'create',
  ),
  'requirements' => 
  array (
  ),
  'suffix' => '',
));
$map['community_list'] = new sfRoute('/lists/:slug', array (
  'module' => 'list',
  'action' => 'show',
), array (
  'slug' => '[^/\\.]+',
), array (
  'suffix' => '',
  'variable_prefixes' => 
  array (
    0 => ':',
  ),
  'segment_separators' => 
  array (
    0 => '/',
    1 => '.',
  ),
  'variable_regex' => '[\\w\\d_]+',
  'text_regex' => '.+?',
  'generate_shortest_url' => true,
  'extra_parameters_as_query_string' => true,
  'load_configuration' => true,
  'default_module' => 'default',
  'default_action' => 'index',
  'debug' => '',
  'logging' => '',
  'variable_prefix_regex' => '(?:\\:)',
  'segment_separators_regex' => '(?:/|\\.)',
  'variable_content_regex' => '[^/\\.]+',
));
$map['community_list']->setCompiledData(array (
  'tokens' => 
  array (
    0 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    1 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'lists',
      3 => NULL,
    ),
    2 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    3 => 
    array (
      0 => 'variable',
      1 => '/',
      2 => ':slug',
      3 => 'slug',
    ),
  ),
  'default_parameters' => 
  array (
  ),
  'default_options' => 
  array (
    'load_configuration' => true,
    'suffix' => '',
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
  ),
  'options' => 
  array (
    'suffix' => '',
    'variable_prefixes' => 
    array (
      0 => ':',
    ),
    'segment_separators' => 
    array (
      0 => '/',
      1 => '.',
    ),
    'variable_regex' => '[\\w\\d_]+',
    'text_regex' => '.+?',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
    'load_configuration' => true,
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'variable_prefix_regex' => '(?:\\:)',
    'segment_separators_regex' => '(?:/|\\.)',
    'variable_content_regex' => '[^/\\.]+',
  ),
  'pattern' => '/lists/:slug',
  'regex' => '#^
/lists
/(?P<slug>[^/\\.]+)
$#x',
  'variables' => 
  array (
    'slug' => ':slug',
  ),
  'defaults' => 
  array (
    'module' => 'list',
    'action' => 'show',
  ),
  'requirements' => 
  array (
    'slug' => '[^/\\.]+',
  ),
  'suffix' => '',
));
$map['community_list_add_item'] = new sfRoute('/lists/:slug/item/add', array (
  'module' => 'list',
  'action' => 'addListItem',
), array (
  'slug' => '[^/\\.]+',
), array (
  'suffix' => '',
  'variable_prefixes' => 
  array (
    0 => ':',
  ),
  'segment_separators' => 
  array (
    0 => '/',
    1 => '.',
  ),
  'variable_regex' => '[\\w\\d_]+',
  'text_regex' => '.+?',
  'generate_shortest_url' => true,
  'extra_parameters_as_query_string' => true,
  'load_configuration' => true,
  'default_module' => 'default',
  'default_action' => 'index',
  'debug' => '',
  'logging' => '',
  'variable_prefix_regex' => '(?:\\:)',
  'segment_separators_regex' => '(?:/|\\.)',
  'variable_content_regex' => '[^/\\.]+',
));
$map['community_list_add_item']->setCompiledData(array (
  'tokens' => 
  array (
    0 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    1 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'lists',
      3 => NULL,
    ),
    2 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    3 => 
    array (
      0 => 'variable',
      1 => '/',
      2 => ':slug',
      3 => 'slug',
    ),
    4 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    5 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'item',
      3 => NULL,
    ),
    6 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    7 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'add',
      3 => NULL,
    ),
  ),
  'default_parameters' => 
  array (
  ),
  'default_options' => 
  array (
    'load_configuration' => true,
    'suffix' => '',
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
  ),
  'options' => 
  array (
    'suffix' => '',
    'variable_prefixes' => 
    array (
      0 => ':',
    ),
    'segment_separators' => 
    array (
      0 => '/',
      1 => '.',
    ),
    'variable_regex' => '[\\w\\d_]+',
    'text_regex' => '.+?',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
    'load_configuration' => true,
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'variable_prefix_regex' => '(?:\\:)',
    'segment_separators_regex' => '(?:/|\\.)',
    'variable_content_regex' => '[^/\\.]+',
  ),
  'pattern' => '/lists/:slug/item/add',
  'regex' => '#^
/lists
/(?P<slug>[^/\\.]+)
/item
/add
$#x',
  'variables' => 
  array (
    'slug' => ':slug',
  ),
  'defaults' => 
  array (
    'module' => 'list',
    'action' => 'addListItem',
  ),
  'requirements' => 
  array (
    'slug' => '[^/\\.]+',
  ),
  'suffix' => '',
));
$map['authors'] = new sfRoute('/authors', array (
  'module' => 'author',
  'action' => 'index',
), array (
), array (
  'suffix' => '',
  'variable_prefixes' => 
  array (
    0 => ':',
  ),
  'segment_separators' => 
  array (
    0 => '/',
    1 => '.',
  ),
  'variable_regex' => '[\\w\\d_]+',
  'text_regex' => '.+?',
  'generate_shortest_url' => true,
  'extra_parameters_as_query_string' => true,
  'load_configuration' => true,
  'default_module' => 'default',
  'default_action' => 'index',
  'debug' => '',
  'logging' => '',
  'variable_prefix_regex' => '(?:\\:)',
  'segment_separators_regex' => '(?:/|\\.)',
  'variable_content_regex' => '[^/\\.]+',
));
$map['authors']->setCompiledData(array (
  'tokens' => 
  array (
    0 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    1 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'authors',
      3 => NULL,
    ),
  ),
  'default_parameters' => 
  array (
  ),
  'default_options' => 
  array (
    'load_configuration' => true,
    'suffix' => '',
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
  ),
  'options' => 
  array (
    'suffix' => '',
    'variable_prefixes' => 
    array (
      0 => ':',
    ),
    'segment_separators' => 
    array (
      0 => '/',
      1 => '.',
    ),
    'variable_regex' => '[\\w\\d_]+',
    'text_regex' => '.+?',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
    'load_configuration' => true,
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'variable_prefix_regex' => '(?:\\:)',
    'segment_separators_regex' => '(?:/|\\.)',
    'variable_content_regex' => '[^/\\.]+',
  ),
  'pattern' => '/authors',
  'regex' => '#^
/authors
$#x',
  'variables' => 
  array (
  ),
  'defaults' => 
  array (
    'module' => 'author',
    'action' => 'index',
  ),
  'requirements' => 
  array (
  ),
  'suffix' => '',
));
$map['author'] = new sfRoute('/authors/:username', array (
  'module' => 'author',
  'action' => 'show',
), array (
  'username' => '[^/\\.]+',
), array (
  'suffix' => '',
  'variable_prefixes' => 
  array (
    0 => ':',
  ),
  'segment_separators' => 
  array (
    0 => '/',
    1 => '.',
  ),
  'variable_regex' => '[\\w\\d_]+',
  'text_regex' => '.+?',
  'generate_shortest_url' => true,
  'extra_parameters_as_query_string' => true,
  'load_configuration' => true,
  'default_module' => 'default',
  'default_action' => 'index',
  'debug' => '',
  'logging' => '',
  'variable_prefix_regex' => '(?:\\:)',
  'segment_separators_regex' => '(?:/|\\.)',
  'variable_content_regex' => '[^/\\.]+',
));
$map['author']->setCompiledData(array (
  'tokens' => 
  array (
    0 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    1 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'authors',
      3 => NULL,
    ),
    2 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    3 => 
    array (
      0 => 'variable',
      1 => '/',
      2 => ':username',
      3 => 'username',
    ),
  ),
  'default_parameters' => 
  array (
  ),
  'default_options' => 
  array (
    'load_configuration' => true,
    'suffix' => '',
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
  ),
  'options' => 
  array (
    'suffix' => '',
    'variable_prefixes' => 
    array (
      0 => ':',
    ),
    'segment_separators' => 
    array (
      0 => '/',
      1 => '.',
    ),
    'variable_regex' => '[\\w\\d_]+',
    'text_regex' => '.+?',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
    'load_configuration' => true,
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'variable_prefix_regex' => '(?:\\:)',
    'segment_separators_regex' => '(?:/|\\.)',
    'variable_content_regex' => '[^/\\.]+',
  ),
  'pattern' => '/authors/:username',
  'regex' => '#^
/authors
/(?P<username>[^/\\.]+)
$#x',
  'variables' => 
  array (
    'username' => ':username',
  ),
  'defaults' => 
  array (
    'module' => 'author',
    'action' => 'show',
  ),
  'requirements' => 
  array (
    'username' => '[^/\\.]+',
  ),
  'suffix' => '',
));
$map['author_new'] = new sfRoute('/author/new', array (
  'module' => 'author',
  'action' => 'join',
), array (
), array (
  'suffix' => '',
  'variable_prefixes' => 
  array (
    0 => ':',
  ),
  'segment_separators' => 
  array (
    0 => '/',
    1 => '.',
  ),
  'variable_regex' => '[\\w\\d_]+',
  'text_regex' => '.+?',
  'generate_shortest_url' => true,
  'extra_parameters_as_query_string' => true,
  'load_configuration' => true,
  'default_module' => 'default',
  'default_action' => 'index',
  'debug' => '',
  'logging' => '',
  'variable_prefix_regex' => '(?:\\:)',
  'segment_separators_regex' => '(?:/|\\.)',
  'variable_content_regex' => '[^/\\.]+',
));
$map['author_new']->setCompiledData(array (
  'tokens' => 
  array (
    0 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    1 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'author',
      3 => NULL,
    ),
    2 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    3 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'new',
      3 => NULL,
    ),
  ),
  'default_parameters' => 
  array (
  ),
  'default_options' => 
  array (
    'load_configuration' => true,
    'suffix' => '',
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
  ),
  'options' => 
  array (
    'suffix' => '',
    'variable_prefixes' => 
    array (
      0 => ':',
    ),
    'segment_separators' => 
    array (
      0 => '/',
      1 => '.',
    ),
    'variable_regex' => '[\\w\\d_]+',
    'text_regex' => '.+?',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
    'load_configuration' => true,
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'variable_prefix_regex' => '(?:\\:)',
    'segment_separators_regex' => '(?:/|\\.)',
    'variable_content_regex' => '[^/\\.]+',
  ),
  'pattern' => '/author/new',
  'regex' => '#^
/author
/new
$#x',
  'variables' => 
  array (
  ),
  'defaults' => 
  array (
    'module' => 'author',
    'action' => 'join',
  ),
  'requirements' => 
  array (
  ),
  'suffix' => '',
));
$map['author_edit'] = new sfRoute('/author/:username/edit', array (
  'module' => 'author',
  'action' => 'edit',
), array (
  'username' => '[^/\\.]+',
), array (
  'suffix' => '',
  'variable_prefixes' => 
  array (
    0 => ':',
  ),
  'segment_separators' => 
  array (
    0 => '/',
    1 => '.',
  ),
  'variable_regex' => '[\\w\\d_]+',
  'text_regex' => '.+?',
  'generate_shortest_url' => true,
  'extra_parameters_as_query_string' => true,
  'load_configuration' => true,
  'default_module' => 'default',
  'default_action' => 'index',
  'debug' => '',
  'logging' => '',
  'variable_prefix_regex' => '(?:\\:)',
  'segment_separators_regex' => '(?:/|\\.)',
  'variable_content_regex' => '[^/\\.]+',
));
$map['author_edit']->setCompiledData(array (
  'tokens' => 
  array (
    0 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    1 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'author',
      3 => NULL,
    ),
    2 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    3 => 
    array (
      0 => 'variable',
      1 => '/',
      2 => ':username',
      3 => 'username',
    ),
    4 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    5 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'edit',
      3 => NULL,
    ),
  ),
  'default_parameters' => 
  array (
  ),
  'default_options' => 
  array (
    'load_configuration' => true,
    'suffix' => '',
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
  ),
  'options' => 
  array (
    'suffix' => '',
    'variable_prefixes' => 
    array (
      0 => ':',
    ),
    'segment_separators' => 
    array (
      0 => '/',
      1 => '.',
    ),
    'variable_regex' => '[\\w\\d_]+',
    'text_regex' => '.+?',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
    'load_configuration' => true,
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'variable_prefix_regex' => '(?:\\:)',
    'segment_separators_regex' => '(?:/|\\.)',
    'variable_content_regex' => '[^/\\.]+',
  ),
  'pattern' => '/author/:username/edit',
  'regex' => '#^
/author
/(?P<username>[^/\\.]+)
/edit
$#x',
  'variables' => 
  array (
    'username' => ':username',
  ),
  'defaults' => 
  array (
    'module' => 'author',
    'action' => 'edit',
  ),
  'requirements' => 
  array (
    'username' => '[^/\\.]+',
  ),
  'suffix' => '',
));
$map['about'] = new sfRoute('/about', array (
  'module' => 'site',
  'action' => 'about',
), array (
), array (
  'suffix' => '',
  'variable_prefixes' => 
  array (
    0 => ':',
  ),
  'segment_separators' => 
  array (
    0 => '/',
    1 => '.',
  ),
  'variable_regex' => '[\\w\\d_]+',
  'text_regex' => '.+?',
  'generate_shortest_url' => true,
  'extra_parameters_as_query_string' => true,
  'load_configuration' => true,
  'default_module' => 'default',
  'default_action' => 'index',
  'debug' => '',
  'logging' => '',
  'variable_prefix_regex' => '(?:\\:)',
  'segment_separators_regex' => '(?:/|\\.)',
  'variable_content_regex' => '[^/\\.]+',
));
$map['about']->setCompiledData(array (
  'tokens' => 
  array (
    0 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    1 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'about',
      3 => NULL,
    ),
  ),
  'default_parameters' => 
  array (
  ),
  'default_options' => 
  array (
    'load_configuration' => true,
    'suffix' => '',
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
  ),
  'options' => 
  array (
    'suffix' => '',
    'variable_prefixes' => 
    array (
      0 => ':',
    ),
    'segment_separators' => 
    array (
      0 => '/',
      1 => '.',
    ),
    'variable_regex' => '[\\w\\d_]+',
    'text_regex' => '.+?',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
    'load_configuration' => true,
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'variable_prefix_regex' => '(?:\\:)',
    'segment_separators_regex' => '(?:/|\\.)',
    'variable_content_regex' => '[^/\\.]+',
  ),
  'pattern' => '/about',
  'regex' => '#^
/about
$#x',
  'variables' => 
  array (
  ),
  'defaults' => 
  array (
    'module' => 'site',
    'action' => 'about',
  ),
  'requirements' => 
  array (
  ),
  'suffix' => '',
));
$map['contact'] = new sfRoute('/contact', array (
  'module' => 'site',
  'action' => 'contact',
), array (
), array (
  'suffix' => '',
  'variable_prefixes' => 
  array (
    0 => ':',
  ),
  'segment_separators' => 
  array (
    0 => '/',
    1 => '.',
  ),
  'variable_regex' => '[\\w\\d_]+',
  'text_regex' => '.+?',
  'generate_shortest_url' => true,
  'extra_parameters_as_query_string' => true,
  'load_configuration' => true,
  'default_module' => 'default',
  'default_action' => 'index',
  'debug' => '',
  'logging' => '',
  'variable_prefix_regex' => '(?:\\:)',
  'segment_separators_regex' => '(?:/|\\.)',
  'variable_content_regex' => '[^/\\.]+',
));
$map['contact']->setCompiledData(array (
  'tokens' => 
  array (
    0 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    1 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'contact',
      3 => NULL,
    ),
  ),
  'default_parameters' => 
  array (
  ),
  'default_options' => 
  array (
    'load_configuration' => true,
    'suffix' => '',
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
  ),
  'options' => 
  array (
    'suffix' => '',
    'variable_prefixes' => 
    array (
      0 => ':',
    ),
    'segment_separators' => 
    array (
      0 => '/',
      1 => '.',
    ),
    'variable_regex' => '[\\w\\d_]+',
    'text_regex' => '.+?',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
    'load_configuration' => true,
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'variable_prefix_regex' => '(?:\\:)',
    'segment_separators_regex' => '(?:/|\\.)',
    'variable_content_regex' => '[^/\\.]+',
  ),
  'pattern' => '/contact',
  'regex' => '#^
/contact
$#x',
  'variables' => 
  array (
  ),
  'defaults' => 
  array (
    'module' => 'site',
    'action' => 'contact',
  ),
  'requirements' => 
  array (
  ),
  'suffix' => '',
));
$map['signin'] = new sfRoute('/signin', array (
  'module' => 'sfGuardAuth',
  'action' => 'signin',
), array (
), array (
  'suffix' => '',
  'variable_prefixes' => 
  array (
    0 => ':',
  ),
  'segment_separators' => 
  array (
    0 => '/',
    1 => '.',
  ),
  'variable_regex' => '[\\w\\d_]+',
  'text_regex' => '.+?',
  'generate_shortest_url' => true,
  'extra_parameters_as_query_string' => true,
  'load_configuration' => true,
  'default_module' => 'default',
  'default_action' => 'index',
  'debug' => '',
  'logging' => '',
  'variable_prefix_regex' => '(?:\\:)',
  'segment_separators_regex' => '(?:/|\\.)',
  'variable_content_regex' => '[^/\\.]+',
));
$map['signin']->setCompiledData(array (
  'tokens' => 
  array (
    0 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    1 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'signin',
      3 => NULL,
    ),
  ),
  'default_parameters' => 
  array (
  ),
  'default_options' => 
  array (
    'load_configuration' => true,
    'suffix' => '',
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
  ),
  'options' => 
  array (
    'suffix' => '',
    'variable_prefixes' => 
    array (
      0 => ':',
    ),
    'segment_separators' => 
    array (
      0 => '/',
      1 => '.',
    ),
    'variable_regex' => '[\\w\\d_]+',
    'text_regex' => '.+?',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
    'load_configuration' => true,
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'variable_prefix_regex' => '(?:\\:)',
    'segment_separators_regex' => '(?:/|\\.)',
    'variable_content_regex' => '[^/\\.]+',
  ),
  'pattern' => '/signin',
  'regex' => '#^
/signin
$#x',
  'variables' => 
  array (
  ),
  'defaults' => 
  array (
    'module' => 'sfGuardAuth',
    'action' => 'signin',
  ),
  'requirements' => 
  array (
  ),
  'suffix' => '',
));
$map['signout'] = new sfRoute('/signout', array (
  'module' => 'sfGuardAuth',
  'action' => 'signout',
), array (
), array (
  'suffix' => '',
  'variable_prefixes' => 
  array (
    0 => ':',
  ),
  'segment_separators' => 
  array (
    0 => '/',
    1 => '.',
  ),
  'variable_regex' => '[\\w\\d_]+',
  'text_regex' => '.+?',
  'generate_shortest_url' => true,
  'extra_parameters_as_query_string' => true,
  'load_configuration' => true,
  'default_module' => 'default',
  'default_action' => 'index',
  'debug' => '',
  'logging' => '',
  'variable_prefix_regex' => '(?:\\:)',
  'segment_separators_regex' => '(?:/|\\.)',
  'variable_content_regex' => '[^/\\.]+',
));
$map['signout']->setCompiledData(array (
  'tokens' => 
  array (
    0 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    1 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'signout',
      3 => NULL,
    ),
  ),
  'default_parameters' => 
  array (
  ),
  'default_options' => 
  array (
    'load_configuration' => true,
    'suffix' => '',
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
  ),
  'options' => 
  array (
    'suffix' => '',
    'variable_prefixes' => 
    array (
      0 => ':',
    ),
    'segment_separators' => 
    array (
      0 => '/',
      1 => '.',
    ),
    'variable_regex' => '[\\w\\d_]+',
    'text_regex' => '.+?',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
    'load_configuration' => true,
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'variable_prefix_regex' => '(?:\\:)',
    'segment_separators_regex' => '(?:/|\\.)',
    'variable_content_regex' => '[^/\\.]+',
  ),
  'pattern' => '/signout',
  'regex' => '#^
/signout
$#x',
  'variables' => 
  array (
  ),
  'defaults' => 
  array (
    'module' => 'sfGuardAuth',
    'action' => 'signout',
  ),
  'requirements' => 
  array (
  ),
  'suffix' => '',
));
$map['signout_redirect'] = new sfRoute('/signout/redirect', array (
  'module' => 'site',
  'action' => 'signoutRedirect',
), array (
), array (
  'suffix' => '',
  'variable_prefixes' => 
  array (
    0 => ':',
  ),
  'segment_separators' => 
  array (
    0 => '/',
    1 => '.',
  ),
  'variable_regex' => '[\\w\\d_]+',
  'text_regex' => '.+?',
  'generate_shortest_url' => true,
  'extra_parameters_as_query_string' => true,
  'load_configuration' => true,
  'default_module' => 'default',
  'default_action' => 'index',
  'debug' => '',
  'logging' => '',
  'variable_prefix_regex' => '(?:\\:)',
  'segment_separators_regex' => '(?:/|\\.)',
  'variable_content_regex' => '[^/\\.]+',
));
$map['signout_redirect']->setCompiledData(array (
  'tokens' => 
  array (
    0 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    1 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'signout',
      3 => NULL,
    ),
    2 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    3 => 
    array (
      0 => 'text',
      1 => '/',
      2 => 'redirect',
      3 => NULL,
    ),
  ),
  'default_parameters' => 
  array (
  ),
  'default_options' => 
  array (
    'load_configuration' => true,
    'suffix' => '',
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
  ),
  'options' => 
  array (
    'suffix' => '',
    'variable_prefixes' => 
    array (
      0 => ':',
    ),
    'segment_separators' => 
    array (
      0 => '/',
      1 => '.',
    ),
    'variable_regex' => '[\\w\\d_]+',
    'text_regex' => '.+?',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
    'load_configuration' => true,
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'variable_prefix_regex' => '(?:\\:)',
    'segment_separators_regex' => '(?:/|\\.)',
    'variable_content_regex' => '[^/\\.]+',
  ),
  'pattern' => '/signout/redirect',
  'regex' => '#^
/signout
/redirect
$#x',
  'variables' => 
  array (
  ),
  'defaults' => 
  array (
    'module' => 'site',
    'action' => 'signoutRedirect',
  ),
  'requirements' => 
  array (
  ),
  'suffix' => '',
));
$map['homepage'] = new sfRoute('/', array (
  'module' => 'site',
  'action' => 'index',
  'homepage' => '1',
), array (
), array (
  'suffix' => '',
  'variable_prefixes' => 
  array (
    0 => ':',
  ),
  'segment_separators' => 
  array (
    0 => '/',
    1 => '.',
  ),
  'variable_regex' => '[\\w\\d_]+',
  'text_regex' => '.+?',
  'generate_shortest_url' => true,
  'extra_parameters_as_query_string' => true,
  'load_configuration' => true,
  'default_module' => 'default',
  'default_action' => 'index',
  'debug' => '',
  'logging' => '',
  'variable_prefix_regex' => '(?:\\:)',
  'segment_separators_regex' => '(?:/|\\.)',
  'variable_content_regex' => '[^/\\.]+',
));
$map['homepage']->setCompiledData(array (
  'tokens' => 
  array (
    0 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    1 => 
    array (
      0 => 'separator',
      1 => '/',
      2 => '/',
    ),
  ),
  'default_parameters' => 
  array (
  ),
  'default_options' => 
  array (
    'load_configuration' => true,
    'suffix' => '',
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
  ),
  'options' => 
  array (
    'suffix' => '',
    'variable_prefixes' => 
    array (
      0 => ':',
    ),
    'segment_separators' => 
    array (
      0 => '/',
      1 => '.',
    ),
    'variable_regex' => '[\\w\\d_]+',
    'text_regex' => '.+?',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
    'load_configuration' => true,
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'variable_prefix_regex' => '(?:\\:)',
    'segment_separators_regex' => '(?:/|\\.)',
    'variable_content_regex' => '[^/\\.]+',
  ),
  'pattern' => '/',
  'regex' => '#^

/$#x',
  'variables' => 
  array (
  ),
  'defaults' => 
  array (
    'module' => 'site',
    'action' => 'index',
    'homepage' => '1',
  ),
  'requirements' => 
  array (
  ),
  'suffix' => '/',
));
$map['default_index'] = new sfRoute('/:module', array (
  'action' => 'index',
), array (
  'module' => '[^/\\.]+',
), array (
  'suffix' => '',
  'variable_prefixes' => 
  array (
    0 => ':',
  ),
  'segment_separators' => 
  array (
    0 => '/',
    1 => '.',
  ),
  'variable_regex' => '[\\w\\d_]+',
  'text_regex' => '.+?',
  'generate_shortest_url' => true,
  'extra_parameters_as_query_string' => true,
  'load_configuration' => true,
  'default_module' => 'default',
  'default_action' => 'index',
  'debug' => '',
  'logging' => '',
  'variable_prefix_regex' => '(?:\\:)',
  'segment_separators_regex' => '(?:/|\\.)',
  'variable_content_regex' => '[^/\\.]+',
));
$map['default_index']->setCompiledData(array (
  'tokens' => 
  array (
    0 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    1 => 
    array (
      0 => 'variable',
      1 => '/',
      2 => ':module',
      3 => 'module',
    ),
  ),
  'default_parameters' => 
  array (
  ),
  'default_options' => 
  array (
    'load_configuration' => true,
    'suffix' => '',
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
  ),
  'options' => 
  array (
    'suffix' => '',
    'variable_prefixes' => 
    array (
      0 => ':',
    ),
    'segment_separators' => 
    array (
      0 => '/',
      1 => '.',
    ),
    'variable_regex' => '[\\w\\d_]+',
    'text_regex' => '.+?',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
    'load_configuration' => true,
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'variable_prefix_regex' => '(?:\\:)',
    'segment_separators_regex' => '(?:/|\\.)',
    'variable_content_regex' => '[^/\\.]+',
  ),
  'pattern' => '/:module',
  'regex' => '#^
/(?P<module>[^/\\.]+)
$#x',
  'variables' => 
  array (
    'module' => ':module',
  ),
  'defaults' => 
  array (
    'action' => 'index',
  ),
  'requirements' => 
  array (
    'module' => '[^/\\.]+',
  ),
  'suffix' => '',
));
$map['default'] = new sfRoute('/:module/:action/*', array (
), array (
  'module' => '[^/\\.]+',
  'action' => '[^/\\.]+',
), array (
  'suffix' => '',
  'variable_prefixes' => 
  array (
    0 => ':',
  ),
  'segment_separators' => 
  array (
    0 => '/',
    1 => '.',
  ),
  'variable_regex' => '[\\w\\d_]+',
  'text_regex' => '.+?',
  'generate_shortest_url' => true,
  'extra_parameters_as_query_string' => true,
  'load_configuration' => true,
  'default_module' => 'default',
  'default_action' => 'index',
  'debug' => '',
  'logging' => '',
  'variable_prefix_regex' => '(?:\\:)',
  'segment_separators_regex' => '(?:/|\\.)',
  'variable_content_regex' => '[^/\\.]+',
));
$map['default']->setCompiledData(array (
  'tokens' => 
  array (
    0 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    1 => 
    array (
      0 => 'variable',
      1 => '/',
      2 => ':module',
      3 => 'module',
    ),
    2 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    3 => 
    array (
      0 => 'variable',
      1 => '/',
      2 => ':action',
      3 => 'action',
    ),
    4 => 
    array (
      0 => 'separator',
      1 => '',
      2 => '/',
      3 => NULL,
    ),
    5 => 
    array (
      0 => 'text',
      1 => '/',
      2 => '*',
      3 => NULL,
    ),
  ),
  'default_parameters' => 
  array (
  ),
  'default_options' => 
  array (
    'load_configuration' => true,
    'suffix' => '',
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
  ),
  'options' => 
  array (
    'suffix' => '',
    'variable_prefixes' => 
    array (
      0 => ':',
    ),
    'segment_separators' => 
    array (
      0 => '/',
      1 => '.',
    ),
    'variable_regex' => '[\\w\\d_]+',
    'text_regex' => '.+?',
    'generate_shortest_url' => true,
    'extra_parameters_as_query_string' => true,
    'load_configuration' => true,
    'default_module' => 'default',
    'default_action' => 'index',
    'debug' => '',
    'logging' => '',
    'variable_prefix_regex' => '(?:\\:)',
    'segment_separators_regex' => '(?:/|\\.)',
    'variable_content_regex' => '[^/\\.]+',
  ),
  'pattern' => '/:module/:action/*',
  'regex' => '#^
/(?P<module>[^/\\.]+)
/(?P<action>[^/\\.]+)
(?:(?:/(?P<_star>.*))?
)?
$#x',
  'variables' => 
  array (
    'module' => ':module',
    'action' => ':action',
  ),
  'defaults' => 
  array (
  ),
  'requirements' => 
  array (
    'module' => '[^/\\.]+',
    'action' => '[^/\\.]+',
  ),
  'suffix' => '',
));
return $map;
